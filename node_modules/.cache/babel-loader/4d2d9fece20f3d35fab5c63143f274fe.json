{"ast":null,"code":"import{otherVersions}from'./pokemonList';export var getMegas=function getMegas(creature){var inputs=['first','second','third','fourth'];var selectedVersions=[];inputs.map(function(i){var versionInput=creature[\"\".concat(i,\"Mega\")].toLowerCase();if(!creature[\"\".concat(i,\"Mega\")].trim())return selectedVersions.push('normal');var creatureName=i==='first'?creature.firstCreature:i==='second'?creature.secondCreature:i==='third'?creature.thirdCreature:creature.fourthCreature;// get pokemon info from those that have other versions\nvar pkmnInfo=otherVersions.filter(function(pkmn){return pkmn.name===creatureName.toLowerCase();});if(!pkmnInfo[0].name)return selectedVersions.push('normal');// check if versionInput exists in the pokemon's versions\nvar version=pkmnInfo[0].versions.filter(function(v){return v===versionInput;});// if it does, length of version is greater than 0\nif(version.length>0){return selectedVersions.push(version);}return selectedVersions.push('normal');});return selectedVersions;};// PUT MEGAS\nexport var putMegas=function putMegas(creature,megas){var evolutions=[];for(var i=0;i<megas.length;i++){var place=i===0?'first':i===1?'second':i===2?'third':'fourth';var selectedVersion=megas[i]==='normal'?'':megas[i]==='none'?'':\"-\".concat(megas[i]);var creatureInput=place==='first'?'firstCreature':place==='second'?'secondCreature':place==='third'?'thirdCreature':'fourthCreature';var version=\"\".concat(creature[creatureInput]).concat(selectedVersion);evolutions.push(version.toLowerCase());}return evolutions;};","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/modules/megas.js"],"names":["otherVersions","getMegas","creature","inputs","selectedVersions","map","i","versionInput","toLowerCase","trim","push","creatureName","firstCreature","secondCreature","thirdCreature","fourthCreature","pkmnInfo","filter","pkmn","name","version","versions","v","length","putMegas","megas","evolutions","place","selectedVersion","creatureInput"],"mappings":"AAAA,OAASA,aAAT,KAA8B,eAA9B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,QAAQ,CAAI,CAClC,GAAIC,CAAAA,MAAM,CAAG,CAAC,OAAD,CAAU,QAAV,CAAoB,OAApB,CAA6B,QAA7B,CAAb,CACA,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CAEAD,MAAM,CAACE,GAAP,CAAW,SAAAC,CAAC,CAAI,CACd,GAAMC,CAAAA,YAAY,CAAGL,QAAQ,WAAII,CAAJ,SAAR,CAAqBE,WAArB,EAArB,CAEA,GAAI,CAACN,QAAQ,WAAII,CAAJ,SAAR,CAAqBG,IAArB,EAAL,CAAkC,MAAOL,CAAAA,gBAAgB,CAACM,IAAjB,CAAsB,QAAtB,CAAP,CAElC,GAAMC,CAAAA,YAAY,CAAGL,CAAC,GAAK,OAAN,CAAgBJ,QAAQ,CAACU,aAAzB,CACfN,CAAC,GAAK,QAAN,CAAiBJ,QAAQ,CAACW,cAA1B,CACAP,CAAC,GAAK,OAAN,CAAgBJ,QAAQ,CAACY,aAAzB,CACAZ,QAAQ,CAACa,cAHf,CAKA;AACA,GAAMC,CAAAA,QAAQ,CAAGhB,aAAa,CAACiB,MAAd,CAAqB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,GAAcR,YAAY,CAACH,WAAb,EAAlB,EAAzB,CAAjB,CAEA,GAAI,CAACQ,QAAQ,CAAC,CAAD,CAAR,CAAYG,IAAjB,CAAuB,MAAOf,CAAAA,gBAAgB,CAACM,IAAjB,CAAsB,QAAtB,CAAP,CAEvB;AACA,GAAMU,CAAAA,OAAO,CAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,QAAZ,CAAqBJ,MAArB,CAA4B,SAAAK,CAAC,QAAIA,CAAAA,CAAC,GAAKf,YAAV,EAA7B,CAAhB,CAEA;AACA,GAAIa,OAAO,CAACG,MAAR,CAAiB,CAArB,CAAwB,CACtB,MAAOnB,CAAAA,gBAAgB,CAACM,IAAjB,CAAsBU,OAAtB,CAAP,CACD,CAED,MAAOhB,CAAAA,gBAAgB,CAACM,IAAjB,CAAsB,QAAtB,CAAP,CACD,CAxBD,EA0BA,MAAON,CAAAA,gBAAP,CACD,CA/BM,CAiCP;AACA,MAAO,IAAMoB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACtB,QAAD,CAAWuB,KAAX,CAAqB,CAC3C,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CAEA,IAAK,GAAIpB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGmB,KAAK,CAACF,MAA1B,CAAkCjB,CAAC,EAAnC,CAAuC,CACrC,GAAMqB,CAAAA,KAAK,CAAGrB,CAAC,GAAK,CAAN,CAAU,OAAV,CACZA,CAAC,GAAK,CAAN,CAAU,QAAV,CACAA,CAAC,GAAK,CAAN,CAAU,OAAV,CACA,QAHF,CAKA,GAAMsB,CAAAA,eAAe,CAAGH,KAAK,CAACnB,CAAD,CAAL,GAAa,QAAb,CAAwB,EAAxB,CACpBmB,KAAK,CAACnB,CAAD,CAAL,GAAa,MAAb,CAAsB,EAAtB,YACImB,KAAK,CAACnB,CAAD,CADT,CADJ,CAIA,GAAMuB,CAAAA,aAAa,CAAGF,KAAK,GAAK,OAAV,CAAoB,eAApB,CAClBA,KAAK,GAAK,QAAV,CAAqB,gBAArB,CACAA,KAAK,GAAK,OAAV,CAAoB,eAApB,CACA,gBAHJ,CAKA,GAAMP,CAAAA,OAAO,WAAMlB,QAAQ,CAAC2B,aAAD,CAAd,SAAgCD,eAAhC,CAAb,CAEAF,UAAU,CAAChB,IAAX,CAAgBU,OAAO,CAACZ,WAAR,EAAhB,EACD,CAED,MAAOkB,CAAAA,UAAP,CACD,CAxBM","sourcesContent":["import { otherVersions } from './pokemonList';\n\nexport const getMegas = creature => {\n  let inputs = ['first', 'second', 'third', 'fourth'];\n  let selectedVersions = [];\n\n  inputs.map(i => {\n    const versionInput = creature[`${i}Mega`].toLowerCase();\n    \n    if (!creature[`${i}Mega`].trim()) return selectedVersions.push('normal');\n\n    const creatureName = i === 'first' ? creature.firstCreature\n        : i === 'second' ? creature.secondCreature\n        : i === 'third' ? creature.thirdCreature\n        : creature.fourthCreature;\n\n    // get pokemon info from those that have other versions\n    const pkmnInfo = otherVersions.filter(pkmn => pkmn.name === creatureName.toLowerCase());\n\n    if (!pkmnInfo[0].name) return selectedVersions.push('normal');\n    \n    // check if versionInput exists in the pokemon's versions\n    const version = pkmnInfo[0].versions.filter(v => v === versionInput);\n\n    // if it does, length of version is greater than 0\n    if (version.length > 0) {\n      return selectedVersions.push(version);\n    }\n\n    return selectedVersions.push('normal');\n  });\n\n  return selectedVersions;\n}\n\n// PUT MEGAS\nexport const putMegas = (creature, megas) => {\n  const evolutions = [];\n\n  for (let i = 0; i < megas.length; i++) {\n    const place = i === 0 ? 'first' :\n      i === 1 ? 'second' :\n      i === 2 ? 'third' :\n      'fourth';\n\n    const selectedVersion = megas[i] === 'normal' ? ''\n      : megas[i] === 'none' ? '' \n      : `-${megas[i]}`;\n\n    const creatureInput = place === 'first' ? 'firstCreature'\n      : place === 'second' ? 'secondCreature'\n      : place === 'third' ? 'thirdCreature'\n      : 'fourthCreature';\n\n    const version = `${creature[creatureInput]}${selectedVersion}`;\n\n    evolutions.push(version.toLowerCase());\n  }\n\n  return evolutions;\n}"]},"metadata":{},"sourceType":"module"}