{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js\";\nimport React, { useState, useReducer, useContext, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\nimport CreatureContextProvider, { CreatureContext } from './CreatureContext';\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n  const {\n    creatures\n  } = useContext(CreatureContextProvider);\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [signup, setSignup] = useState(true);\n  useEffect(async () => {\n    const users = await userService.getAll();\n    const thisUser = users.filter(acct => acct.username === userInfo.username); // find user that matches login\n    // return .readUser(userId) method\n\n    console.log(thisUser);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const toggleSignup = () => {\n    return setSignup(!signup);\n  };\n\n  const addUser = async userObject => {\n    const users = await userService.getAll();\n    console.log(users);\n  };\n\n  const login = userObject => {};\n\n  const deleteUser = userObject => {};\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user,\n      signup,\n      toggleSignup,\n      addUser,\n      login,\n      deleteUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js"],"names":["React","useState","useReducer","useContext","createContext","useEffect","userService","userReducer","CreatureContextProvider","CreatureContext","UserContext","UserContextProvider","props","user","dispatch","storedUser","localStorage","getItem","JSON","parse","creatures","userInfo","setUserInfo","username","email","password","signup","setSignup","users","getAll","thisUser","filter","acct","console","log","setItem","stringify","toggleSignup","addUser","userObject","login","deleteUser","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,UAAtC,EAAkDC,aAAlD,EAAiEC,SAAjE,QAAkF,OAAlF;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,uBAAP,IAAkCC,eAAlC,QAAyD,mBAAzD;AAEA,OAAO,MAAMC,WAAW,GAAGN,aAAa,EAAjC;;AAEP,MAAMO,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBZ,UAAU,CAACK,WAAD,EAAc,EAAd,EAAkB,MAAM;AACzD,UAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAnB;AACA,WAAOF,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAH,GAA4B,EAA7C;AACD,GAHkC,CAAnC;AAKA,QAAM;AAAEK,IAAAA;AAAF,MAAgBjB,UAAU,CAACK,uBAAD,CAAhC;AAEA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC;AACvCsB,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,QAAQ,EAAE;AAH6B,GAAD,CAAxC;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,IAAD,CAApC;AAEAI,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMuB,KAAK,GAAG,MAAMtB,WAAW,CAACuB,MAAZ,EAApB;AAEA,UAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACT,QAAL,KAAkBF,QAAQ,CAACE,QAAhD,CAAjB,CAHoB,CAKpB;AACA;;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,GARQ,EAQN,EARM,CAAT;AAUAzB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACmB,OAAb,CAAqB,SAArB,EAAgCjB,IAAI,CAACkB,SAAL,CAAevB,IAAf,CAAhC;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMwB,YAAY,GAAG,MAAM;AACzB,WAAOV,SAAS,CAAC,CAACD,MAAF,CAAhB;AACD,GAFD;;AAIA,QAAMY,OAAO,GAAG,MAAOC,UAAP,IAAsB;AACpC,UAAMX,KAAK,GAAG,MAAMtB,WAAW,CAACuB,MAAZ,EAApB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACD,GAJD;;AAMA,QAAMY,KAAK,GAAGD,UAAU,IAAI,CAAE,CAA9B;;AAEA,QAAME,UAAU,GAAGF,UAAU,IAAI,CAAE,CAAnC;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC3B1B,MAAAA,IAD2B;AAE3Ba,MAAAA,MAF2B;AAG3BW,MAAAA,YAH2B;AAI3BC,MAAAA,OAJ2B;AAK3BE,MAAAA,KAL2B;AAM3BC,MAAAA;AAN2B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG7B,KAAK,CAAC8B,QART,CADF;AAYD,CAxDD;;AA0DA,eAAe/B,mBAAf","sourcesContent":["import React, { useState, useReducer, useContext, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\nimport CreatureContextProvider, { CreatureContext } from './CreatureContext';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n\n  const { creatures } = useContext(CreatureContextProvider);\n\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  const [signup, setSignup] = useState(true);\n\n  useEffect(async () => {\n    const users = await userService.getAll();\n\n    const thisUser = users.filter(acct => acct.username === userInfo.username);\n    \n    // find user that matches login\n    // return .readUser(userId) method\n    console.log(thisUser);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const toggleSignup = () => {\n    return setSignup(!signup);\n  }\n\n  const addUser = async (userObject) => {\n    const users = await userService.getAll();\n\n    console.log(users);\n  }\n\n  const login = userObject => {}\n\n  const deleteUser = userObject => {}\n\n  return (\n    <UserContext.Provider value={{\n      user,\n      signup,\n      toggleSignup,\n      addUser,\n      login,\n      deleteUser,\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}