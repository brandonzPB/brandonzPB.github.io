{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js\";\nimport React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n  const [error, setError] = useState({\n    error: null\n  });\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n    console.log(user);\n  }, [user]);\n\n  const addUser = async userObject => {\n    userService.createUser(userObject).then(res => {\n      if (res === false) {\n        setError({ ...error,\n          error: true\n        });\n      } else {\n        setError({ ...error,\n          error: null\n        });\n      }\n    }).catch(err => console.error(err));\n  };\n\n  const getLocalCreatures = () => {\n    const creatureStorage = localStorage.getItem('my-creatures');\n    return creatureStorage ? JSON.parse(creatureStorage) : null;\n  };\n\n  const getUserInfo = async (accessToken, userObject) => {\n    console.log('Successfully logged in', userObject.db_id, accessToken);\n    const storedCreatures = await getLocalCreatures();\n    return;\n    const user = await userService.readUser(userObject.db_id).then(res => res).catch(err => console.err(err));\n    const {\n      username,\n      email,\n      password\n    } = user;\n    console.log('Successfully retrieved user info');\n    dispatch({\n      type: 'LOG_IN',\n      user: {\n        accessToken,\n        username,\n        email,\n        password,\n        storedCreatures\n      }\n    });\n  };\n\n  const login = async userObject => {\n    const {\n      username,\n      password\n    } = userObject;\n    await userService.login({\n      username,\n      password\n    }).then(res => {\n      console.log(res.db_id);\n      return getUserInfo(res.accessToken, userObject);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const deleteUser = userObject => {};\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user,\n      error,\n      setError,\n      addUser,\n      login,\n      deleteUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js"],"names":["React","useState","useReducer","createContext","useEffect","userService","userReducer","UserContext","UserContextProvider","props","user","dispatch","storedUser","localStorage","getItem","JSON","parse","error","setError","setItem","stringify","console","log","addUser","userObject","createUser","then","res","catch","err","getLocalCreatures","creatureStorage","getUserInfo","accessToken","db_id","storedCreatures","readUser","username","email","password","type","login","deleteUser","children"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n\n  const [error, setError] = useState({ error: null });\n\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n\n    console.log(user);\n  }, [user]);\n\n  const addUser = async (userObject) => {\n\n    userService.createUser(userObject)\n      .then(res => {\n        if (res === false) {\n          setError({\n            ...error,\n            error: true\n          });\n        } else {\n          setError({\n            ...error,\n            error: null\n          });\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  const getLocalCreatures = () => {\n    const creatureStorage = localStorage.getItem('my-creatures');\n    \n    return creatureStorage ? JSON.parse(creatureStorage) : null;\n  }\n\n  const getUserInfo = async (accessToken, userObject) => {\n    console.log('Successfully logged in', userObject.db_id, accessToken);\n\n    const storedCreatures = await getLocalCreatures();\n\n    return;\n\n    const user = await userService.readUser(userObject.db_id)\n      .then(res => res)\n      .catch(err => console.err(err));\n\n    const { username, email, password } = user;\n\n    console.log('Successfully retrieved user info');\n\n    dispatch({ type: 'LOG_IN', user: {\n      accessToken, username, email, password, storedCreatures,\n    }});\n  }\n\n  const login = async (userObject) => {\n    const { username, password } = userObject;\n\n    await userService.login({\n      username,\n      password\n    })\n      .then(res => { \n        console.log(res.db_id);\n        \n        return getUserInfo(res.accessToken, userObject); \n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  const deleteUser = userObject => {}\n\n  return (\n    <UserContext.Provider value={{\n      user,\n      error,\n      setError,\n      addUser,\n      login,\n      deleteUser,\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}