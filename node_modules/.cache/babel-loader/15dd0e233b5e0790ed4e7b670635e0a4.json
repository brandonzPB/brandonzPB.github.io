{"ast":null,"code":"var getAge=function getAge(birthTime){var string=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var currentTime=Date.now();var difference=currentTime-birthTime;var dayDifference=difference/1000/86400;var minutes=dayDifference*1440;var days=dayDifference%365;var years=(dayDifference-days)/365;return string?\"\".concat(years,\" years, and \").concat(Math.round(days),\" days old\"):minutes;};exports.checkCreatureStreak=function(thisDay,streakTimestamp,streakDay){// checks if streak is broken, constant, or needs to be incremented\nif(streakDay===6){// Streak continues if current week day is 0 and less than 24 hours passed\nif(thisDay!==0&&thisDay!==6){// Streak broken\nreturn'broken';}else if(thisDay===0){// Next week day\n// if more than 2 days passed; streak is over\n// else, increment streak count\nvar minDifference=getAge(streakTimestamp,false);return minDifference>2880?'broken':'increment';}else{// Same day\nreturn'constant';}}else{// Streak continues if current week day is streak.timestamp + 1, and if less than 24 hours passed\nif(thisDay===streakDay+1){// if more than 2 days passed; streak is over\n// else, increment streak count\nvar _minDifference=getAge(streakTimestamp,false);return _minDifference>2880?'broken':'increment';}else if(streakDay===thisDay){// Same day\nreturn'constant';}else{return'broken';}}};exports.updateCreatureStreak=function(creature,userDispatch,finish){var newCount=creature.streak_count+1;var newTimestamp=Date.now();var newDay=new Date().getDay();userDispatch({type:'UPDATE_STREAK',creature:{id:creature.id,newCount:newCount,newTimestamp:newTimestamp,newDay:newDay}});finish('creature',creature,'stats');return creature;};exports.resetCreatureStreak=function(creature,userDispatch,finish){var newCount=0;var newTimestamp=Date.now();var newDay=new Date().getDay();userDispatch({type:'UPDATE_STREAK',creature:{id:creature.id,newCount:newCount,newTimestamp:newTimestamp,newDay:newDay}});finish('creature',creature,'stats');return creature;};","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/modules/streak.js"],"names":["getAge","birthTime","string","currentTime","Date","now","difference","dayDifference","minutes","days","years","Math","round","exports","checkCreatureStreak","thisDay","streakTimestamp","streakDay","minDifference","updateCreatureStreak","creature","userDispatch","finish","newCount","streak_count","newTimestamp","newDay","getDay","type","id","resetCreatureStreak"],"mappings":"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","sourcesContent":["const getAge = (birthTime, string = true) => {\n  const currentTime = Date.now();\n  const difference = currentTime - birthTime;\n\n  const dayDifference = (difference / 1000) / 86400;\n\n  const minutes = dayDifference * 1440;\n  const days = dayDifference % 365;\n  const years = (dayDifference - days) / 365;\n\n  return string ? `${years} years, and ${Math.round(days)} days old` : minutes;\n}\n\nexports.checkCreatureStreak = (thisDay, streakTimestamp, streakDay) => {\n  // checks if streak is broken, constant, or needs to be incremented\n\n  if (streakDay === 6) { // Streak continues if current week day is 0 and less than 24 hours passed\n\n    if (thisDay !== 0 && thisDay !== 6) { // Streak broken\n      return 'broken';\n    } else if (thisDay === 0) { // Next week day\n      // if more than 2 days passed; streak is over\n      // else, increment streak count\n\n      const minDifference = getAge(streakTimestamp, false);\n      return minDifference > 2880 ? 'broken' : 'increment';\n    } else { // Same day\n\n      return 'constant';\n    }\n\n  } else { // Streak continues if current week day is streak.timestamp + 1, and if less than 24 hours passed\n    \n    if (thisDay === streakDay + 1) {\n      // if more than 2 days passed; streak is over\n      // else, increment streak count\n\n      const minDifference = getAge(streakTimestamp, false);\n      return minDifference > 2880 ? 'broken' : 'increment';\n    } else if (streakDay === thisDay) { // Same day\n\n      return 'constant';\n    } else {\n      return 'broken';\n    }\n  }\n}\n\nexports.updateCreatureStreak = (creature, userDispatch, finish) => {\n  const newCount = creature.streak_count + 1;\n  const newTimestamp = Date.now();\n  const newDay = (new Date()).getDay();\n\n  userDispatch({ type: 'UPDATE_STREAK', creature: {\n    id: creature.id,\n    newCount,\n    newTimestamp,\n    newDay,\n  }});\n\n  finish('creature', creature, 'stats');\n\n  return creature;\n}\n\nexports.resetCreatureStreak = (creature, userDispatch, finish) => {\n  const newCount = 0;\n  const newTimestamp = Date.now();\n  const newDay = (new Date()).getDay();\n\n  userDispatch({ type: 'UPDATE_STREAK', creature: {\n    id: creature.id,\n    newCount,\n    newTimestamp,\n    newDay,\n  }});\n\n  finish('creature', creature, 'stats');\n  \n  return creature;\n};"]},"metadata":{},"sourceType":"module"}