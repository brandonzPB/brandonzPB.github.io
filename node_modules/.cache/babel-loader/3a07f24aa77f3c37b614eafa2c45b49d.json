{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js\";\nimport React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n  const [signup, setSignup] = useState(true);\n  useEffect(() => {\n    userService.getAll().then(users => {\n      // find user that matches login\n      // return .readUser(userId) method\n      console.log(users);\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const toggleSignup = () => {\n    return setSignup(!signup);\n  };\n\n  const addUser = userObject => {};\n\n  const login = userObject => {};\n\n  const deleteUser = userObject => {};\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user,\n      toggleSignup,\n      addUser,\n      login,\n      deleteUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js"],"names":["React","useState","useReducer","createContext","useEffect","userService","userReducer","UserContext","UserContextProvider","props","user","dispatch","storedUser","localStorage","getItem","JSON","parse","signup","setSignup","getAll","then","users","console","log","setItem","stringify","toggleSignup","addUser","userObject","login","deleteUser","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBT,UAAU,CAACI,WAAD,EAAc,EAAd,EAAkB,MAAM;AACzD,UAAMM,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAnB;AACA,WAAOF,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAH,GAA4B,EAA7C;AACD,GAHkC,CAAnC;AAKA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CACRc,MADH,GAEGC,IAFH,CAEQC,KAAK,IAAI;AACb;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCT,IAAI,CAACU,SAAL,CAAef,IAAf,CAAhC;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMgB,YAAY,GAAG,MAAM;AACzB,WAAOR,SAAS,CAAC,CAACD,MAAF,CAAhB;AACD,GAFD;;AAIA,QAAMU,OAAO,GAAGC,UAAU,IAAI,CAAE,CAAhC;;AAEA,QAAMC,KAAK,GAAGD,UAAU,IAAI,CAAE,CAA9B;;AAEA,QAAME,UAAU,GAAGF,UAAU,IAAI,CAAE,CAAnC;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC3BlB,MAAAA,IAD2B;AAE3BgB,MAAAA,YAF2B;AAG3BC,MAAAA,OAH2B;AAI3BE,MAAAA,KAJ2B;AAK3BC,MAAAA;AAL2B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGrB,KAAK,CAACsB,QAPT,CADF;AAWD,CA3CD;;AA6CA,eAAevB,mBAAf","sourcesContent":["import React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n\n  const [signup, setSignup] = useState(true);\n\n  useEffect(() => {\n    userService\n      .getAll()\n      .then(users => {\n        // find user that matches login\n        // return .readUser(userId) method\n        console.log(users);\n      });\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const toggleSignup = () => {\n    return setSignup(!signup);\n  }\n\n  const addUser = userObject => {}\n\n  const login = userObject => {}\n\n  const deleteUser = userObject => {}\n\n  return (\n    <UserContext.Provider value={{\n      user,\n      toggleSignup,\n      addUser,\n      login,\n      deleteUser,\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}