{"ast":null,"code":"const userReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return { ...state,\n        accessToken: action.user.accessToken,\n        db_id: action.user.db_id,\n        username: action.user.username,\n        email: action.user.email,\n        creatures: action.user.creatures\n      };\n\n    case 'POST_LOCAL_CREATURES':\n      return { ...state,\n        creatures: action.creatures.creatures\n      };\n\n    case 'UPDATE_CREATURES':\n      return { ...state,\n        creatures: action.creatures.creatures\n      };\n\n    case 'ADD_CREATURE':\n      return { ...state,\n        creatures: [...state.creatures, {\n          creature: action.creature.creature,\n          creature_name: action.creature.creature_name,\n          purpose: action.creature.purpose,\n          purpose_name: action.creature.purpose_name,\n          evolutions: action.creature.evolutions,\n          difficulty: action.creature.difficulty,\n          multiplier: action.creature.multiplier,\n          birth_date: action.creature.birth_date,\n          birth_time: action.creature.birth_time,\n          pokeball_number: action.creature.pokeball_number,\n          id: action.creature.id,\n          level: 1,\n          exp: 0,\n          exp_goal: 1,\n          prev_exp_goal: 0,\n          exp_surplus: 0,\n          objectives: [],\n          age: 0,\n          is_noob: true,\n          streak_count: 0,\n          streak_timestamp: Date.now(),\n          streak_day: new Date().getDay()\n        }]\n      };\n\n    case 'ADD_OBJECTIVE':\n      return { ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.id) {\n            return { ...creature,\n              objectives: [...creature.objectives, {\n                id: action.objective.id,\n                text: action.objective.text,\n                is_timed: action.objective.is_timed,\n                difficulty: action.objective.difficulty,\n                factor: action.objective.factor\n              }]\n            };\n          }\n\n          return creature;\n        })\n      };\n\n    case 'DELETE_OBJECTIVE':\n      return { ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creatureId) {\n            return { ...creature,\n              objectives: creature.objectives.filter(obj => obj.id !== action.objectiveId)\n            };\n          }\n\n          return creature;\n        })\n      };\n\n    case 'ADD_EXP':\n      return { ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return { ...creature,\n              exp: action.creature.newTotal,\n              exp_surplus: action.creature.newSurplus\n            };\n          }\n\n          return creature;\n        })\n      };\n\n    case 'DELETE_CREATURE':\n      return { ...state,\n        creatures: state.creatures.filter(creature => creature.id !== action.id)\n      };\n\n    case 'LOG_OUT':\n      return { ...state,\n        accessToken: null,\n        db_id: null,\n        username: null,\n        email: null,\n        password: null,\n        creatures: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/reducers/userReducer.js"],"names":["userReducer","state","action","type","accessToken","user","db_id","username","email","creatures","creature","creature_name","purpose","purpose_name","evolutions","difficulty","multiplier","birth_date","birth_time","pokeball_number","id","level","exp","exp_goal","prev_exp_goal","exp_surplus","objectives","age","is_noob","streak_count","streak_timestamp","Date","now","streak_day","getDay","map","objective","text","is_timed","factor","creatureId","filter","obj","objectiveId","newTotal","newSurplus","password"],"mappings":"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","sourcesContent":["const userReducer = (state, action) => {\n  switch(action.type) {\n    case 'LOG_IN':\n      return {\n        ...state,\n        accessToken: action.user.accessToken,\n        db_id: action.user.db_id,\n        username: action.user.username,\n        email: action.user.email,\n        creatures: action.user.creatures,\n      }\n    case 'POST_LOCAL_CREATURES':\n      return {\n        ...state,\n        creatures: action.creatures.creatures\n      };\n    case 'UPDATE_CREATURES':\n      return {\n        ...state,\n        creatures: action.creatures.creatures\n      };\n    case 'ADD_CREATURE':\n      return {\n        ...state,\n        creatures: [\n          ...state.creatures,\n          {\n            creature: action.creature.creature,\n            creature_name: action.creature.creature_name,\n            purpose: action.creature.purpose,\n            purpose_name: action.creature.purpose_name,\n            evolutions: action.creature.evolutions,\n            difficulty: action.creature.difficulty,\n            multiplier: action.creature.multiplier,\n            birth_date: action.creature.birth_date,\n            birth_time: action.creature.birth_time,\n            pokeball_number: action.creature.pokeball_number,\n            id: action.creature.id,\n            level: 1,\n            exp: 0,\n            exp_goal: 1,\n            prev_exp_goal: 0,\n            exp_surplus: 0,\n            objectives: [],\n            age: 0,\n            is_noob: true,\n            streak_count: 0,\n            streak_timestamp: Date.now(),\n            streak_day: (new Date()).getDay(),\n          }\n        ]\n      };\n    case 'ADD_OBJECTIVE':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.id) {\n            return {\n              ...creature,\n              objectives: [\n                ...creature.objectives,\n                {\n                  id: action.objective.id,\n                  text: action.objective.text,\n                  is_timed: action.objective.is_timed,\n                  difficulty: action.objective.difficulty,\n                  factor: action.objective.factor\n                }\n              ]\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'DELETE_OBJECTIVE':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creatureId) {\n            return {\n              ...creature,\n              objectives: creature.objectives.filter(obj => obj.id !== action.objectiveId)\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'ADD_EXP':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              exp: action.creature.newTotal,\n              exp_surplus: action.creature.newSurplus\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'DELETE_CREATURE':\n      return {\n        ...state,\n        creatures: state.creatures.filter(creature => creature.id !== action.id)\n      };\n    case 'LOG_OUT':\n      return {\n        ...state,\n        accessToken: null,\n        db_id: null,\n        username: null,\n        email: null,\n        password: null,\n        creatures: [],\n      };\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}