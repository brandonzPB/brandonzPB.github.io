{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\n\nconst creatureReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_CREATURE':\n      return [...state, {\n        creature: action.creature.creature,\n        creature_name: action.creature.creatureName,\n        purpose: action.creature.purpose,\n        purpose_name: action.creature.purposeName,\n        id: action.creature.id,\n        sprite: `./sprites/pkmnXY/${action.creature.creature.toLowerCase()}.gif`,\n        level: 1,\n        exp: 0,\n        exp_goal: 1,\n        prev_exp_goal: 0,\n        exp_surplus: 0,\n        difficulty: action.creature.difficulty,\n        multiplier: action.creature.multiplier,\n        objectives: [],\n        birth_date: action.creature.birthdate,\n        birth_time: action.creature.birthTime,\n        age: 0,\n        is_noob: true,\n        evolutions: [...action.creature.evolutions],\n        pokeball_number: action.creature.pokeballNumber,\n        streak_count: 0,\n        streak_timestamp: Date.now(),\n        streak_day: new Date().getDay()\n      }];\n\n    case 'RESET_BAR':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            prev_exp_goal: action.creature.prevGoal,\n            exp_surplus: action.creature.surplus\n          };\n        }\n\n        return creature;\n      });\n\n    case 'UPDATE_AGE':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            age: action.creature.newAge\n          };\n        }\n\n        return creature;\n      });\n\n    case 'ADD_EXP':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            exp: action.creature.newTotal,\n            exp_surplus: action.creature.newSurplus\n          };\n        }\n\n        return creature;\n      });\n\n    case 'RESET_STREAK':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            streak_count: action.creature.newCount,\n            streak_timestamp: action.creature.newTimestamp,\n            streak_day: action.creature.newDay\n          };\n        }\n\n        return creature;\n      });\n\n    case 'UPDATE_STREAK':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            streak_count: action.creature.newCount,\n            streak_timestamp: action.creature.newTimestamp,\n            streak_day: action.creature.newDay\n          };\n        }\n\n        return creature;\n      });\n\n    case 'LEVEL_UP':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            level: action.creature.level\n          };\n        }\n\n        return creature;\n      });\n\n    case 'UPGRADE_MULTIPLIERS':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            difficulty: action.creature.difficulty,\n            multiplier: action.creature.multiplier\n          };\n        }\n\n        return creature;\n      });\n\n    case 'LEVEL_UPDATES':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            prev_exp_goal: action.creature.prevGoal,\n            exp_goal: action.creature.newGoal,\n            is_noob: false\n          };\n        }\n\n        return creature;\n      });\n\n    case 'UPDATE_POKEBALL':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            pokeball_number: action.creature.newPokeball\n          };\n        }\n\n        return creature;\n      });\n\n    case 'EVOLVE':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            creature: action.creature.nextCreature,\n            sprite: `../sprites/pkmnXY/${action.creature.nextCreature}.gif`\n          };\n        }\n\n        return creature;\n      });\n\n    case 'TOGGLE_OBJECTIVES_DISPLAY':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            objectivesDisplayed: !creature.objectivesDisplayed\n          };\n        }\n\n        return creature;\n      });\n\n    case 'ADD_OBJECTIVE':\n      return state.map(creature => {\n        if (creature.id === action.creatureId) {\n          return { ...creature,\n            objectives: [...creature.objectives, action.objective]\n          };\n        }\n\n        return creature;\n      });\n\n    case 'DELETE_OBJECTIVE':\n      return state.map(creature => {\n        if (creature.id === action.creatureId) {\n          const objectiveArr = creature.objectives.filter(item => item.id !== action.item);\n          return { ...creature,\n            objectives: objectiveArr\n          };\n        }\n\n        return creature;\n      });\n\n    case 'DELETE_CREATURE':\n      return state.filter(creature => creature.id !== action.id);\n\n    case 'LOG_OUT':\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nexport default creatureReducer;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/reducers/creatureReducer.js"],"names":["v4","uuidv4","creatureReducer","state","action","type","creature","creature_name","creatureName","purpose","purpose_name","purposeName","id","sprite","toLowerCase","level","exp","exp_goal","prev_exp_goal","exp_surplus","difficulty","multiplier","objectives","birth_date","birthdate","birth_time","birthTime","age","is_noob","evolutions","pokeball_number","pokeballNumber","streak_count","streak_timestamp","Date","now","streak_day","getDay","map","prevGoal","surplus","newAge","newTotal","newSurplus","newCount","newTimestamp","newDay","newGoal","newPokeball","nextCreature","objectivesDisplayed","creatureId","objective","objectiveArr","filter","item"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst creatureReducer = (state, action) => {\n  switch(action.type) {\n    case 'ADD_CREATURE':\n      return [...state, {\n        creature: action.creature.creature,\n        creature_name: action.creature.creatureName,\n        purpose: action.creature.purpose,\n        purpose_name: action.creature.purposeName,\n        id: action.creature.id,\n        sprite: `./sprites/pkmnXY/${action.creature.creature.toLowerCase()}.gif`,\n        level: 1,\n        exp: 0,\n        exp_goal: 1,\n        prev_exp_goal: 0,\n        exp_surplus: 0,\n        difficulty: action.creature.difficulty,\n        multiplier: action.creature.multiplier,\n        objectives: [],\n        birth_date: action.creature.birthdate,\n        birth_time: action.creature.birthTime,\n        age: 0,\n        is_noob: true,\n        evolutions: [...action.creature.evolutions],\n        pokeball_number: action.creature.pokeballNumber,\n        streak_count: 0,\n        streak_timestamp: Date.now(),\n        streak_day: (new Date()).getDay(),\n      }];\n    case 'RESET_BAR':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            prev_exp_goal: action.creature.prevGoal,\n            exp_surplus: action.creature.surplus,\n          }\n        }\n\n        return creature;\n      });\n    case 'UPDATE_AGE':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            age: action.creature.newAge\n          }\n        }\n\n        return creature;\n      });\n    case 'ADD_EXP':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            exp: action.creature.newTotal,\n            exp_surplus: action.creature.newSurplus,\n          }\n        }\n\n        return creature;\n      });\n    case 'RESET_STREAK':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            streak_count: action.creature.newCount,\n            streak_timestamp: action.creature.newTimestamp,\n            streak_day: action.creature.newDay\n          }\n        }\n\n        return creature;\n      });\n    case 'UPDATE_STREAK':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            streak_count: action.creature.newCount,\n            streak_timestamp: action.creature.newTimestamp,\n            streak_day: action.creature.newDay\n          }\n        }\n\n        return creature;\n      });\n    case 'LEVEL_UP':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            level: action.creature.level,\n          }\n        }\n\n        return creature;\n      });\n    case 'UPGRADE_MULTIPLIERS':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            difficulty: action.creature.difficulty,\n            multiplier: action.creature.multiplier\n          }\n        }\n\n        return creature;\n      });\n    case 'LEVEL_UPDATES':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            prev_exp_goal: action.creature.prevGoal,\n            exp_goal: action.creature.newGoal,\n            is_noob: false,\n          }\n        }\n\n        return creature;\n      });\n    case 'UPDATE_POKEBALL':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            pokeball_number: action.creature.newPokeball\n          }\n        }\n\n        return creature;\n      });\n    case 'EVOLVE':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            creature: action.creature.nextCreature,\n            sprite: `../sprites/pkmnXY/${action.creature.nextCreature}.gif`,\n          }\n        }\n\n        return creature;\n      });\n    case 'TOGGLE_OBJECTIVES_DISPLAY':\n      return (state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            objectivesDisplayed: !creature.objectivesDisplayed\n          }\n        }\n\n        return creature;\n      }));\n    case 'ADD_OBJECTIVE': \n      return state.map(creature => {\n        if (creature.id === action.creatureId) {\n          return {\n            ...creature,\n            objectives: [\n              ...creature.objectives,\n              action.objective\n            ]\n          }\n        }\n\n        return creature;\n      })\n    case 'DELETE_OBJECTIVE':\n      return state.map(creature => {\n        if (creature.id === action.creatureId) {\n          const objectiveArr = creature.objectives.filter(item => item.id !== action.item);\n\n          return {\n            ...creature,\n            objectives: objectiveArr\n          }\n        }\n\n        return creature;\n      })\n    case 'DELETE_CREATURE':\n      return state.filter(creature => creature.id !== action.id);\n    case 'LOG_OUT':\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport default creatureReducer;\n"]},"metadata":{},"sourceType":"module"}