{"ast":null,"code":"import _regeneratorRuntime from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useReducer,useEffect,useContext,createContext}from'react';import creatureReducer from'../reducers/creatureReducer';import*as objective from'../modules/objective';import creatureService from'../services/creatureService';import{UserContext}from'./UserContext';export var CreatureContext=createContext();var CreatureContextProvider=function CreatureContextProvider(props){var _useContext=useContext(UserContext),user=_useContext.user,userDispatch=_useContext.userDispatch,updateUser=_useContext.updateUser,refreshUser=_useContext.refreshUser,logout=_useContext.logout;var _useReducer=useReducer(creatureReducer,user.creatures),_useReducer2=_slicedToArray(_useReducer,2),creatures=_useReducer2[0],dispatch=_useReducer2[1];//   const creatures = localStorage.getItem('my-user');\n//   const storedCreatures = creatures ? JSON.parse(creatures) : [];\n//   return storedCreatures.creatures;\n// });\n/* useEffect(() => {\n    console.log('creatures', creatures)\n\n    dispatch({ type: 'UPDATE_STATE', creatures: { creatures: user.creatures }});\n  }, [])\n\n  useEffect(() => {\n    userDispatch({ type: 'UPDATE_CREATURES', creatures: { creatures: user.creatures }});\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user.creatures]); */ /* const [creatures, dispatch] = useReducer(creatureReducer, [], () => {\n    const storedCreatures = localStorage.getItem('my-creatures');\n    return storedCreatures ? JSON.parse(storedCreatures) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('my-creatures', JSON.stringify(creatures));\n  }, [creatures]); */var _useState=useState(''),_useState2=_slicedToArray(_useState,2),currentId=_useState2[0],setCurrentId=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),play=_useState4[0],setPlay=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),formDisplay=_useState6[0],setFormDisplay=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),expUpdate=_useState8[0],setExpUpdate=_useState8[1];var _useState9=useState({type:'',object:'',method:''}),_useState10=_slicedToArray(_useState9,2),done=_useState10[0],setDone=_useState10[1];useEffect(function(){if(done.type.trim()){if(done.type==='objective'){updateObjectives();}else if(done.type==='creature'){if(done.method==='create')createCreature(done.object);else if(done.method==='stats')updateCreatureStats(done.object.id);else if(done.method==='info')updateCreatureInfo(done.object.id);}else if(done.type==='db'){if(done.method==='refresh')refreshUser();else if(done.method==='update'||done.method==='updatePassword'||done.method==='creatures')updateUser(done.method);else if(done.method==='delete')logout();}return setDone(_objectSpread(_objectSpread({},done),{},{type:'',object:null,method:''}));}return false;},[done]);var finish=function finish(type){var object=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var method=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return type='creature'?setDone(_objectSpread(_objectSpread({},done),{},{type:type,object:object,method:method})):setDone(_objectSpread(_objectSpread({},done),{},{type:type,object:object,method:method}));};// CREATE CREATURE\nvar createCreature=function createCreature(creatureObject){creatureService.createCreature(user.db_id,creatureObject,user.accessToken).then(function(res){console.log('res',res);finish('db',null,'refresh');return res;}).catch(function(err){return console.error(err);});console.log('Successfully added creature',creatureObject);};// UPDATE CREATURE STATS\nvar updateCreatureStats=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(creatureId){var creature;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('Updating creature...');creature=user.creatures.filter(function(being){return being.id===creatureId;});_context.next=4;return creatureService.updateCreatureStats(user.db_id,creature[0]._id,creature[0],user.accessToken).then(function(res){return res;}).catch(function(err){return console.error(err);});case 4:console.log('Successfully updated creature');case 5:case\"end\":return _context.stop();}}},_callee);}));return function updateCreatureStats(_x){return _ref.apply(this,arguments);};}();// UPDATE CREATURE INFO\nvar updateCreatureInfo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(creatureId){var creature;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('Updating creature...');creature=user.creatures.filter(function(being){return being.id===creatureId;});_context2.next=4;return creatureService.updateCreatureInfo(user.db_id,creature[0]._id,creature[0],user.accessToken).then(function(res){return res;}).catch(function(err){return console.error(err);});case 4:console.log('Successfully updated creature');case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function updateCreatureInfo(_x2){return _ref2.apply(this,arguments);};}();/// OBJECTIVE METHODS ///\nvar checkObjectiveText=function checkObjectiveText(creatureId,text){var thisCreature=user.creatures.filter(function(being){return being.id===creatureId;});var objectiveIndex=thisCreature[0].objectives.findIndex(function(item){return item.text.toLowerCase()===text.toLowerCase();});return objectiveIndex>=0?true:false;};// UPDATE OBJECTIVES\nvar updateObjectives=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var creature,objectives;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:creature=user.creatures.filter(function(creature){return creature.id===currentId;});objectives=creature[0].objectives;console.log('objectives',objectives);_context3.next=5;return creatureService.updateObjectives(user.db_id,creature[0]._id,objectives,user.accessToken).then(function(res){return console.log('res',res);}).catch(function(err){return console.error(err);});case 5:console.log('Successfully updated objectives');case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function updateObjectives(){return _ref3.apply(this,arguments);};}();// DELETE CREATURE\nvar postDelete=function postDelete(){console.log('Deleting creature',currentId);var creature=user.creatures.filter(function(being){return being.id===currentId;});var creatureDbId=creature[0]._id.toString();userDispatch({type:'DELETE_CREATURE',id:currentId});deleteCreature(creatureDbId);finish('db',null,'refresh');};var deleteCreature=function deleteCreature(creatureId){creatureService.deleteCreature(user.db_id,creatureId,user.accessToken).then(function(res){return res;}).catch(function(err){return console.error(err);});console.log('Successfully deleted creature.');};var getExp=function getExp(habit,time){var creature=user.creatures.filter(function(creature){return creature.id===currentId;});if(creature[0].is_noob)return getFirstExp(creature[0]);var streakCount=creature[0].streak_count;var newExp=objective.calcExp(creature[0].multiplier,streakCount,habit.difficulty,time);var newTotal=creature[0].exp+newExp;var newSurplus=newTotal>=creature[0].exp_goal?newTotal-creature[0].exp_goal:creature[0].exp_surplus+newExp;userDispatch({type:'ADD_EXP',creature:{id:currentId,newTotal:newTotal,newSurplus:newSurplus}});return creature;};var getFirstExp=function getFirstExp(creature){var newTotal=1;var newSurplus=0;userDispatch({type:'ADD_EXP',creature:{id:creature.id,newTotal:newTotal,newSurplus:newSurplus}});return creature;};var toggleExpUpdate=function toggleExpUpdate(){setExpUpdate(!expUpdate);};var toggleFormDisplay=function toggleFormDisplay(){setFormDisplay(!formDisplay);};var showCreatureObjectives=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",setCurrentId(id));case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function showCreatureObjectives(_x3){return _ref4.apply(this,arguments);};}();var togglePlay=function togglePlay(){setPlay(!play);};return/*#__PURE__*/React.createElement(CreatureContext.Provider,{value:{creatures:creatures,createCreature:createCreature,updateCreatureInfo:updateCreatureInfo,updateCreatureStats:updateCreatureStats,updateObjectives:updateObjectives,postDelete:postDelete,deleteCreature:deleteCreature,currentId:currentId,play:play,togglePlay:togglePlay,formDisplay:formDisplay,toggleFormDisplay:toggleFormDisplay,expUpdate:expUpdate,toggleExpUpdate:toggleExpUpdate,done:done,setDone:setDone,finish:finish,dispatch:dispatch,showCreatureObjectives:showCreatureObjectives,getExp:getExp,checkObjectiveText:checkObjectiveText}},props.children);};export default CreatureContextProvider;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/CreatureContext.js"],"names":["React","useState","useReducer","useEffect","useContext","createContext","creatureReducer","objective","creatureService","UserContext","CreatureContext","CreatureContextProvider","props","user","userDispatch","updateUser","refreshUser","logout","creatures","dispatch","currentId","setCurrentId","play","setPlay","formDisplay","setFormDisplay","expUpdate","setExpUpdate","type","object","method","done","setDone","trim","updateObjectives","createCreature","updateCreatureStats","id","updateCreatureInfo","finish","creatureObject","db_id","accessToken","then","res","console","log","catch","err","error","creatureId","creature","filter","being","_id","checkObjectiveText","text","thisCreature","objectiveIndex","objectives","findIndex","item","toLowerCase","postDelete","creatureDbId","toString","deleteCreature","getExp","habit","time","is_noob","getFirstExp","streakCount","streak_count","newExp","calcExp","multiplier","difficulty","newTotal","exp","newSurplus","exp_goal","exp_surplus","toggleExpUpdate","toggleFormDisplay","showCreatureObjectives","togglePlay","children"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useContext, createContext } from 'react';\nimport creatureReducer from '../reducers/creatureReducer';\nimport * as objective from '../modules/objective'\nimport creatureService from '../services/creatureService';\nimport { UserContext } from './UserContext';\n\nexport const CreatureContext = createContext();\n\nconst CreatureContextProvider = (props) => {\n  const { user, userDispatch, updateUser, refreshUser, logout } = useContext(UserContext);\n\n  const [creatures, dispatch] = useReducer(creatureReducer, user.creatures);\n  //   const creatures = localStorage.getItem('my-user');\n  //   const storedCreatures = creatures ? JSON.parse(creatures) : [];\n  //   return storedCreatures.creatures;\n  // });\n\n  /* useEffect(() => {\n    console.log('creatures', creatures)\n\n    dispatch({ type: 'UPDATE_STATE', creatures: { creatures: user.creatures }});\n  }, [])\n\n  useEffect(() => {\n    userDispatch({ type: 'UPDATE_CREATURES', creatures: { creatures: user.creatures }});\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user.creatures]); */\n\n  /* const [creatures, dispatch] = useReducer(creatureReducer, [], () => {\n    const storedCreatures = localStorage.getItem('my-creatures');\n    return storedCreatures ? JSON.parse(storedCreatures) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('my-creatures', JSON.stringify(creatures));\n  }, [creatures]); */\n\n  const [currentId, setCurrentId] = useState('');\n  const [play, setPlay] = useState(false);\n  const [formDisplay, setFormDisplay] = useState(true);\n  const [expUpdate, setExpUpdate] = useState(false);\n\n  const [done, setDone] = useState({\n    type: '',\n    object: '',\n    method: '',\n  });\n\n  useEffect(() => {\n    if (done.type.trim()) {\n\n      if (done.type === 'objective') {\n        updateObjectives();\n\n      } else if (done.type === 'creature') {\n        if (done.method === 'create') createCreature(done.object);\n        else if (done.method === 'stats') updateCreatureStats(done.object.id);\n        else if (done.method === 'info') updateCreatureInfo(done.object.id);\n\n      } else if (done.type === 'db') {\n        if (done.method === 'refresh') refreshUser();\n        else if (done.method === 'update' || done.method === 'updatePassword' || done.method === 'creatures') updateUser(done.method);\n        else if (done.method === 'delete') logout();\n      }\n\n      return setDone({ ...done,\n        type: '',\n        object: null,\n        method: '',\n      });\n    }\n\n    return false;\n  }, [done]);\n\n  const finish = (type, object = null, method = null) => {\n    return type = 'creature' ?\n      setDone({\n        ...done, \n        type,\n        object,\n        method\n      }) :\n      setDone({\n        ...done,\n        type,\n        object,\n        method\n      });\n  }\n\n\n  // CREATE CREATURE\n  const createCreature = creatureObject => {\n    creatureService.createCreature(user.db_id, creatureObject, user.accessToken)\n      .then(res => {\n        console.log('res', res);\n        finish('db', null, 'refresh');\n        return res;\n      })\n      .catch(err => console.error(err));\n\n    console.log('Successfully added creature', creatureObject);\n  }\n\n  // UPDATE CREATURE STATS\n  const updateCreatureStats = async (creatureId) => {\n    console.log('Updating creature...');\n\n    const creature = user.creatures.filter(being => being.id === creatureId);\n\n    await creatureService.updateCreatureStats(user.db_id, creature[0]._id, creature[0], user.accessToken)\n      .then(res => res)\n      .catch(err => console.error(err));\n\n    console.log('Successfully updated creature');\n  }\n\n  // UPDATE CREATURE INFO\n  const updateCreatureInfo = async (creatureId) => {\n    console.log('Updating creature...');\n\n    const creature = user.creatures.filter(being => being.id === creatureId);\n\n    await creatureService.updateCreatureInfo(user.db_id, creature[0]._id, creature[0], user.accessToken)\n      .then(res => res)\n      .catch(err => console.error(err));\n\n    console.log('Successfully updated creature');\n  }\n\n  /// OBJECTIVE METHODS ///\n\n  const checkObjectiveText = (creatureId, text) => {\n    const thisCreature = user.creatures.filter(being => being.id === creatureId);\n\n    const objectiveIndex = thisCreature[0].objectives.findIndex(item => item.text.toLowerCase() === text.toLowerCase());\n    return (objectiveIndex >= 0) ? true : false;\n  }\n\n  // UPDATE OBJECTIVES\n  const updateObjectives = async () => {\n    const creature = user.creatures.filter(creature => creature.id === currentId);\n\n    const objectives = creature[0].objectives;\n    console.log('objectives', objectives)\n\n    await creatureService.updateObjectives(user.db_id, creature[0]._id, objectives, user.accessToken)\n      .then(res => console.log('res', res))\n      .catch(err => console.error(err));\n\n    console.log('Successfully updated objectives');\n  }\n\n  // DELETE CREATURE\n  const postDelete = () => {\n    console.log('Deleting creature', currentId);\n\n    const creature = user.creatures.filter(being => being.id === currentId);\n    const creatureDbId = creature[0]._id.toString();\n\n    userDispatch({ type: 'DELETE_CREATURE', id: currentId });\n\n    deleteCreature(creatureDbId);\n\n    finish('db', null, 'refresh');\n  }\n\n  const deleteCreature = (creatureId) => {\n    creatureService.deleteCreature(user.db_id, creatureId, user.accessToken)\n      .then(res => res)\n      .catch(err => console.error(err));\n\n    console.log('Successfully deleted creature.');\n  }\n\n  const getExp = (habit, time) => { \n    const creature = user.creatures.filter(creature => creature.id === currentId);\n\n    if (creature[0].is_noob) return getFirstExp(creature[0]);\n\n    const streakCount = creature[0].streak_count;\n\n    const newExp = objective.calcExp(creature[0].multiplier, streakCount, habit.difficulty, time);\n    const newTotal = creature[0].exp + newExp;\n\n    const newSurplus = (newTotal >= creature[0].exp_goal) ? \n      newTotal - creature[0].exp_goal :\n      creature[0].exp_surplus + newExp;\n\n    userDispatch({ type: 'ADD_EXP', creature: {\n      id: currentId,\n      newTotal,\n      newSurplus\n    }});\n\n    return creature;\n  }\n\n  const getFirstExp = creature => {\n    const newTotal = 1;\n    const newSurplus = 0;\n\n    userDispatch({ type: 'ADD_EXP', creature: { id: creature.id, newTotal, newSurplus } });\n\n    return creature;\n  }\n\n  const toggleExpUpdate = () => {\n    setExpUpdate(!expUpdate);\n  }\n\n  const toggleFormDisplay = () => {\n    setFormDisplay(!formDisplay);\n  }\n\n  const showCreatureObjectives = async (id) => {\n    return setCurrentId(id);\n  }\n\n  const togglePlay = () => {\n    setPlay(!play);\n  }\n\n  return (\n    <CreatureContext.Provider \n      value={{\n        creatures,\n        createCreature,\n        updateCreatureInfo,\n        updateCreatureStats,\n        updateObjectives,\n        postDelete,\n        deleteCreature, \n        currentId,\n        play,\n        togglePlay,\n        formDisplay,\n        toggleFormDisplay,\n        expUpdate,\n        toggleExpUpdate,\n        done,\n        setDone,\n        finish,\n        dispatch,\n        showCreatureObjectives,\n        getExp,\n        checkObjectiveText,\n      }}>\n      {props.children}\n    </CreatureContext.Provider>\n  )\n}\n\nexport default CreatureContextProvider;\n"]},"metadata":{},"sourceType":"module"}