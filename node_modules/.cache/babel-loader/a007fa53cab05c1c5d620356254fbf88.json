{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/dashboard/user'; // CREATE user\n\nconst createUser = userObject => {\n  const req = axios.post(`${baseUrl}/create`, userObject);\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // LOGIN\n\n\nconst login = credentials => {\n  const req = axios.post(`${baseUrl}/login`, credentials);\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // GET all users\n\n\nconst getAll = token => {\n  const req = axios.get('/dashboard/users', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // READ user\n\n\nconst readUser = (userId, token) => {\n  const req = axios.get(`${baseUrl}/${userId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => {\n    console.log(res.data);\n    return res.data;\n  }).catch(err => console.error(err));\n}; // POST localStorage creatures\n\n\nconst storeLocalCreatures = (userId, creatures, token) => {\n  const req = axios.post(`${baseUrl}/${userId}`, creatures, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // UPDATE user\n\n\nconst updateUser = (userId, userObject, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/update`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // DELETE user\n\n\nconst deleteUser = (userId, userObject, token) => {\n  const req = axios.delete(`${baseUrl}/${userId}/delete`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // LOGOUT (update everything first)\n\n\nconst logout = (userId, userObject, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/logout`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data).catch(err => console.error(err));\n};\n\nexport default {\n  getAll,\n  createUser,\n  login,\n  readUser,\n  storeLocalCreatures,\n  updateUser,\n  deleteUser\n};","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/services/userService.js"],"names":["axios","baseUrl","createUser","userObject","req","post","then","res","data","catch","err","console","error","login","credentials","getAll","token","get","headers","readUser","userId","log","storeLocalCreatures","creatures","updateUser","put","deleteUser","delete","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/dashboard/user';\n\n// CREATE user\nconst createUser = (userObject) => {\n  const req = axios.post(`${baseUrl}/create`, userObject);\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\n// LOGIN\nconst login = (credentials) => {\n  const req = axios.post(`${baseUrl}/login`, credentials);\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// GET all users\nconst getAll = (token) => {\n  const req = axios.get('/dashboard/users', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\n// READ user\nconst readUser = (userId, token) => {\n  const req = axios.get(`${baseUrl}/${userId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => {\n    console.log(res.data);\n\n    return res.data;\n  })\n    .catch(err => console.error(err));\n};\n\n// POST localStorage creatures\nconst storeLocalCreatures = (userId, creatures, token) => {\n  const req = axios.post(`${baseUrl}/${userId}`, creatures, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// UPDATE user\nconst updateUser = (userId, userObject, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/update`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\n// DELETE user\nconst deleteUser = (userId, userObject, token) => {\n  const req = axios.delete(`${baseUrl}/${userId}/delete`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\n// LOGOUT (update everything first)\nconst logout = (userId, userObject, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/logout`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\nexport default { \n  getAll,\n  createUser,\n  login,\n  readUser,\n  storeLocalCreatures,\n  updateUser,\n  deleteUser \n};\n"]},"metadata":{},"sourceType":"module"}