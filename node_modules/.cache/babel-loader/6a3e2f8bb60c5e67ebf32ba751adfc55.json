{"ast":null,"code":"const otherVersions = require('./pokemonList');\n\nexports.getMegas = creature => {\n  let inputs = ['first', 'second', 'third', 'fourth'];\n  let selectedVersions = [];\n  inputs.map(i => {\n    const versionInput = creature[`${i}Mega`].toLowerCase();\n    if (!creature[`${i}Mega`].trim()) return selectedVersions.push('normal');\n    const creatureName = i === 'first' ? creature.firstCreature : i === 'second' ? creature.secondCreature : i === 'third' ? creature.thirdCreature : creature.fourthCreature; // get pokemon info from those that have other versions\n\n    const pkmnInfo = otherVersions.filter(pkmn => pkmn.name === creatureName.toLowerCase());\n    if (!pkmnInfo[0].name) return selectedVersions.push('normal'); // check if versionInput exists in the pokemon's versions\n\n    const version = pkmnInfo[0].versions.filter(v => v === versionInput); // if it does, length of version is greater than 0\n\n    if (version.length > 0) {\n      return selectedVersions.push(version);\n    }\n\n    return selectedVersions.push('normal');\n  });\n  return selectedVersions;\n};","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/modules/create.js"],"names":["otherVersions","require","exports","getMegas","creature","inputs","selectedVersions","map","i","versionInput","toLowerCase","trim","push","creatureName","firstCreature","secondCreature","thirdCreature","fourthCreature","pkmnInfo","filter","pkmn","name","version","versions","v","length"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA7B;;AAEAC,OAAO,CAACC,QAAR,GAAoBC,QAAD,IAAc;AAC/B,MAAIC,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,QAA7B,CAAb;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AAEAD,EAAAA,MAAM,CAACE,GAAP,CAAWC,CAAC,IAAI;AACd,UAAMC,YAAY,GAAGL,QAAQ,CAAE,GAAEI,CAAE,MAAN,CAAR,CAAqBE,WAArB,EAArB;AAEA,QAAI,CAACN,QAAQ,CAAE,GAAEI,CAAE,MAAN,CAAR,CAAqBG,IAArB,EAAL,EAAkC,OAAOL,gBAAgB,CAACM,IAAjB,CAAsB,QAAtB,CAAP;AAElC,UAAMC,YAAY,GAAGL,CAAC,KAAK,OAAN,GAAgBJ,QAAQ,CAACU,aAAzB,GACfN,CAAC,KAAK,QAAN,GAAiBJ,QAAQ,CAACW,cAA1B,GACAP,CAAC,KAAK,OAAN,GAAgBJ,QAAQ,CAACY,aAAzB,GACAZ,QAAQ,CAACa,cAHf,CALc,CAUd;;AACA,UAAMC,QAAQ,GAAGlB,aAAa,CAACmB,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcR,YAAY,CAACH,WAAb,EAA3C,CAAjB;AAEA,QAAI,CAACQ,QAAQ,CAAC,CAAD,CAAR,CAAYG,IAAjB,EAAuB,OAAOf,gBAAgB,CAACM,IAAjB,CAAsB,QAAtB,CAAP,CAbT,CAed;;AACA,UAAMU,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,QAAZ,CAAqBJ,MAArB,CAA4BK,CAAC,IAAIA,CAAC,KAAKf,YAAvC,CAAhB,CAhBc,CAkBd;;AACA,QAAIa,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACtB,aAAOnB,gBAAgB,CAACM,IAAjB,CAAsBU,OAAtB,CAAP;AACD;;AAED,WAAOhB,gBAAgB,CAACM,IAAjB,CAAsB,QAAtB,CAAP;AACD,GAxBD;AA0BA,SAAON,gBAAP;AACD,CA/BD","sourcesContent":["const otherVersions = require('./pokemonList');\n\nexports.getMegas = (creature) => {\n  let inputs = ['first', 'second', 'third', 'fourth'];\n  let selectedVersions = [];\n\n  inputs.map(i => {\n    const versionInput = creature[`${i}Mega`].toLowerCase();\n\n    if (!creature[`${i}Mega`].trim()) return selectedVersions.push('normal');\n\n    const creatureName = i === 'first' ? creature.firstCreature\n        : i === 'second' ? creature.secondCreature\n        : i === 'third' ? creature.thirdCreature\n        : creature.fourthCreature;\n\n    // get pokemon info from those that have other versions\n    const pkmnInfo = otherVersions.filter(pkmn => pkmn.name === creatureName.toLowerCase());\n\n    if (!pkmnInfo[0].name) return selectedVersions.push('normal');\n    \n    // check if versionInput exists in the pokemon's versions\n    const version = pkmnInfo[0].versions.filter(v => v === versionInput);\n\n    // if it does, length of version is greater than 0\n    if (version.length > 0) {\n      return selectedVersions.push(version);\n    }\n\n    return selectedVersions.push('normal');\n  });\n\n  return selectedVersions;\n};\n"]},"metadata":{},"sourceType":"module"}