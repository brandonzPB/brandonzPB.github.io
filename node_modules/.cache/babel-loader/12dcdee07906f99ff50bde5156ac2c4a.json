{"ast":null,"code":"const otherVersions = require('./pokemonList');\n\nexports.getMegas = creature => {\n  let inputs = ['first', 'second', 'third', 'fourth'];\n  let selectedVersions = [];\n  inputs.map(i => {\n    console.log(`${i}Mega`, creature[`${i}Mega`]);\n    const versionInput = creature[`${i}Mega`].toLowerCase();\n    if (!creature[`${i}Mega`].trim()) return selectedVersions.push('normal');\n    const creatureName = i === 'first' ? creature.firstCreature : i === 'second' ? creature.secondCreature : i === 'third' ? creature.thirdCreature : creature.fourthCreature; // get pokemon info from those that have other versions\n\n    const pkmnInfo = otherVersions.filter(pkmn => pkmn.name === creatureName.toLowerCase());\n    if (!pkmnInfo[0].name) return selectedVersions.push('normal'); // check if versionInput exists in the pokemon's versions\n\n    const version = pkmnInfo[0].versions.filter(v => v === versionInput); // if it does, length of version is greater than 0\n\n    if (version.length > 0) {\n      return selectedVersions.push(version);\n    }\n\n    return selectedVersions.push('normal');\n  });\n  return selectedVersions;\n}; // PUT MEGAS\n\n\nexports.putMegas = (creature, megas) => {\n  const evolutions = [];\n\n  for (let i = 0; i < megas.length; i++) {\n    const place = i === 0 ? 'first' : i === 1 ? 'second' : i === 2 ? 'third' : 'fourth';\n    const selectedVersion = megas[i] === 'normal' ? '' : megas[i] === 'none' ? '' : `-${megas[i]}`;\n    const creatureInput = place === 'first' ? 'firstCreature' : place === 'second' ? 'secondCreature' : place === 'third' ? 'thirdCreature' : 'fourthCreature';\n    const version = `${creature[creatureInput]}${selectedVersion}`;\n    evolutions.push(version.toLowerCase());\n  }\n\n  return evolutions;\n};","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/modules/megas.js"],"names":["otherVersions","require","exports","getMegas","creature","inputs","selectedVersions","map","i","console","log","versionInput","toLowerCase","trim","push","creatureName","firstCreature","secondCreature","thirdCreature","fourthCreature","pkmnInfo","filter","pkmn","name","version","versions","v","length","putMegas","megas","evolutions","place","selectedVersion","creatureInput"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA7B;;AAEAC,OAAO,CAACC,QAAR,GAAmBC,QAAQ,IAAI;AAC7B,MAAIC,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,QAA7B,CAAb;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AAEAD,EAAAA,MAAM,CAACE,GAAP,CAAWC,CAAC,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,CAAE,MAAjB,EAAwBJ,QAAQ,CAAE,GAAEI,CAAE,MAAN,CAAhC;AAEA,UAAMG,YAAY,GAAGP,QAAQ,CAAE,GAAEI,CAAE,MAAN,CAAR,CAAqBI,WAArB,EAArB;AAEA,QAAI,CAACR,QAAQ,CAAE,GAAEI,CAAE,MAAN,CAAR,CAAqBK,IAArB,EAAL,EAAkC,OAAOP,gBAAgB,CAACQ,IAAjB,CAAsB,QAAtB,CAAP;AAElC,UAAMC,YAAY,GAAGP,CAAC,KAAK,OAAN,GAAgBJ,QAAQ,CAACY,aAAzB,GACfR,CAAC,KAAK,QAAN,GAAiBJ,QAAQ,CAACa,cAA1B,GACAT,CAAC,KAAK,OAAN,GAAgBJ,QAAQ,CAACc,aAAzB,GACAd,QAAQ,CAACe,cAHf,CAPc,CAYd;;AACA,UAAMC,QAAQ,GAAGpB,aAAa,CAACqB,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcR,YAAY,CAACH,WAAb,EAA3C,CAAjB;AAEA,QAAI,CAACQ,QAAQ,CAAC,CAAD,CAAR,CAAYG,IAAjB,EAAuB,OAAOjB,gBAAgB,CAACQ,IAAjB,CAAsB,QAAtB,CAAP,CAfT,CAiBd;;AACA,UAAMU,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,QAAZ,CAAqBJ,MAArB,CAA4BK,CAAC,IAAIA,CAAC,KAAKf,YAAvC,CAAhB,CAlBc,CAoBd;;AACA,QAAIa,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACtB,aAAOrB,gBAAgB,CAACQ,IAAjB,CAAsBU,OAAtB,CAAP;AACD;;AAED,WAAOlB,gBAAgB,CAACQ,IAAjB,CAAsB,QAAtB,CAAP;AACD,GA1BD;AA4BA,SAAOR,gBAAP;AACD,CAjCD,C,CAmCA;;;AACAJ,OAAO,CAAC0B,QAAR,GAAmB,CAACxB,QAAD,EAAWyB,KAAX,KAAqB;AACtC,QAAMC,UAAU,GAAG,EAAnB;;AAEA,OAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,KAAK,CAACF,MAA1B,EAAkCnB,CAAC,EAAnC,EAAuC;AACrC,UAAMuB,KAAK,GAAGvB,CAAC,KAAK,CAAN,GAAU,OAAV,GACZA,CAAC,KAAK,CAAN,GAAU,QAAV,GACAA,CAAC,KAAK,CAAN,GAAU,OAAV,GACA,QAHF;AAKA,UAAMwB,eAAe,GAAGH,KAAK,CAACrB,CAAD,CAAL,KAAa,QAAb,GAAwB,EAAxB,GACpBqB,KAAK,CAACrB,CAAD,CAAL,KAAa,MAAb,GAAsB,EAAtB,GACC,IAAGqB,KAAK,CAACrB,CAAD,CAAI,EAFjB;AAIA,UAAMyB,aAAa,GAAGF,KAAK,KAAK,OAAV,GAAoB,eAApB,GAClBA,KAAK,KAAK,QAAV,GAAqB,gBAArB,GACAA,KAAK,KAAK,OAAV,GAAoB,eAApB,GACA,gBAHJ;AAKA,UAAMP,OAAO,GAAI,GAAEpB,QAAQ,CAAC6B,aAAD,CAAgB,GAAED,eAAgB,EAA7D;AAEAF,IAAAA,UAAU,CAAChB,IAAX,CAAgBU,OAAO,CAACZ,WAAR,EAAhB;AACD;;AAED,SAAOkB,UAAP;AACD,CAxBD","sourcesContent":["const otherVersions = require('./pokemonList');\n\nexports.getMegas = creature => {\n  let inputs = ['first', 'second', 'third', 'fourth'];\n  let selectedVersions = [];\n\n  inputs.map(i => {\n    console.log(`${i}Mega`, creature[`${i}Mega`]);\n\n    const versionInput = creature[`${i}Mega`].toLowerCase();\n\n    if (!creature[`${i}Mega`].trim()) return selectedVersions.push('normal');\n\n    const creatureName = i === 'first' ? creature.firstCreature\n        : i === 'second' ? creature.secondCreature\n        : i === 'third' ? creature.thirdCreature\n        : creature.fourthCreature;\n\n    // get pokemon info from those that have other versions\n    const pkmnInfo = otherVersions.filter(pkmn => pkmn.name === creatureName.toLowerCase());\n\n    if (!pkmnInfo[0].name) return selectedVersions.push('normal');\n    \n    // check if versionInput exists in the pokemon's versions\n    const version = pkmnInfo[0].versions.filter(v => v === versionInput);\n\n    // if it does, length of version is greater than 0\n    if (version.length > 0) {\n      return selectedVersions.push(version);\n    }\n\n    return selectedVersions.push('normal');\n  });\n\n  return selectedVersions;\n}\n\n// PUT MEGAS\nexports.putMegas = (creature, megas) => {\n  const evolutions = [];\n\n  for (let i = 0; i < megas.length; i++) {\n    const place = i === 0 ? 'first' :\n      i === 1 ? 'second' :\n      i === 2 ? 'third' :\n      'fourth';\n\n    const selectedVersion = megas[i] === 'normal' ? ''\n      : megas[i] === 'none' ? '' \n      : `-${megas[i]}`;\n\n    const creatureInput = place === 'first' ? 'firstCreature'\n      : place === 'second' ? 'secondCreature'\n      : place === 'third' ? 'thirdCreature'\n      : 'fourthCreature';\n\n    const version = `${creature[creatureInput]}${selectedVersion}`;\n\n    evolutions.push(version.toLowerCase());\n  }\n\n  return evolutions;\n}"]},"metadata":{},"sourceType":"module"}