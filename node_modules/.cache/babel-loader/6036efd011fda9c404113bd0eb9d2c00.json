{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/user/ResetCode.js\";\nimport React, { useState, useContext } from 'react';\nimport { Link, Route, Redirect } from 'react-router-dom';\nimport userService from '../../services/userService';\nimport { UserContext } from '../../contexts/UserContext';\nimport './user.css';\n\nconst ResetCode = () => {\n  const {\n    reset,\n    setReset\n  } = useContext(UserContext);\n  const [form, setForm] = useState({\n    code: ''\n  });\n  const [error, setError] = useState({\n    upset: false\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError({ ...error,\n      upset: false\n    });\n\n    if (form.code.trim()) {\n      const codeMatches = await userService.postResetCode(form.code, reset.resetToken);\n\n      if (codeMatches) {\n        return setReset({ ...reset,\n          code: form.code\n        });\n      } else {\n        return setError({ ...error,\n          upset: true\n        });\n      }\n    } else {\n      return setError({ ...error,\n        upset: true\n      });\n    }\n  };\n\n  const renewCode = async () => {\n    const resetToken = await userService.getResetCode(reset.email);\n    setReset({ ...reset,\n      resetToken: resetToken.reset_token\n    });\n  };\n\n  if (reset.code) {\n    return /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/user/reset/code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/user/reset/password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (!reset.resetToken) {\n    return /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/user/reset/code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-code-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"return-home-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Return Home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Enter code below: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"code\",\n    value: form.code,\n    onChange: handleChange,\n    style: {\n      border: error.upset ? '2px solid red' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-code-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Submit Code\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resend-code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"resend-code-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Need a new code?\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: renewCode,\n    className: \"resend-code-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Resend Code\"));\n};\n\nexport default ResetCode;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/user/ResetCode.js"],"names":["React","useState","useContext","Link","Route","Redirect","userService","UserContext","ResetCode","reset","setReset","form","setForm","code","error","setError","upset","handleChange","event","name","value","target","handleSubmit","preventDefault","trim","codeMatches","postResetCode","resetToken","renewCode","getResetCode","email","reset_token","border"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link, Route, Redirect } from 'react-router-dom';\nimport userService from '../../services/userService';\nimport { UserContext } from '../../contexts/UserContext';\nimport './user.css';\n\nconst ResetCode = () => {\n  const { reset, setReset } = useContext(UserContext);\n\n  const [form, setForm] = useState({ code: '' });\n\n  const [error, setError] = useState({ upset: false });\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setForm({\n      ...form,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    setError({\n      ...error,\n      upset: false\n    });\n\n    if (form.code.trim()) {\n      const codeMatches = await userService.postResetCode(form.code, reset.resetToken);\n\n      if (codeMatches) {\n        return setReset({\n          ...reset,\n          code: form.code\n        });\n      } else {\n        return setError({\n          ...error,\n          upset: true\n        });\n      }\n    } else {\n      return setError({\n        ...error,\n        upset: true\n      });\n    }\n  }\n\n  const renewCode = async () => {\n    const resetToken = await userService.getResetCode(reset.email);\n\n    setReset({\n      ...reset,\n      resetToken: resetToken.reset_token\n    });\n  }\n\n  if (reset.code) {\n    return (\n      <Route exact path=\"/user/reset/code\">\n        <Redirect to=\"/user/reset/password\" />\n      </Route>\n    )\n  }\n\n  if (!reset.resetToken) {\n    return (\n      <Route exact path=\"/user/reset/code\">\n        <Redirect to=\"/\" />\n      </Route>\n    )\n  }\n\n  return (\n    <div className=\"reset-code-form\">\n      <Link to=\"/\">\n        <p className=\"return-home-link\">Return Home</p>\n      </Link>\n      <form onSubmit={handleSubmit}>\n        <label>Enter code below: </label>\n        <input \n          type=\"text\"\n          name=\"code\"\n          value={form.code}\n          onChange={handleChange}\n          style={{\n            border: error.upset ? '2px solid red' : 'none'\n          }}\n        />\n        <button className=\"submit-code-btn\">Submit Code</button>\n      </form>\n\n      <div className=\"resend-code\">\n        <span className=\"resend-code-text\">Need a new code?</span>\n      </div>\n      <button onClick={renewCode} className=\"resend-code-btn\">Resend Code</button>\n    </div>\n  )\n}\n\nexport default ResetCode;\n"]},"metadata":{},"sourceType":"module"}