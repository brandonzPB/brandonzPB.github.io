{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js\";\nimport React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n  const [signup, setSignup] = useState(true);\n  useEffect(async () => {\n    const users = await userService.getAll();\n    const thisUser = users.filter(acct => acct.username === user.username);\n    if (!thisUser) return false; // find user that matches login\n    // return .readUser(userId) method\n\n    console.log(thisUser.creatures);\n    dispatch({\n      type: 'GET_DATA',\n      user: {\n        creatures: thisUser.creatures\n      }\n    });\n  }, [user]);\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const toggleSignup = () => {\n    return setSignup(!signup);\n  };\n\n  const addUser = async userObject => {\n    const users = await userService.getAll();\n    console.log(users);\n  };\n\n  const login = userObject => {\n    const {\n      username,\n      email,\n      password\n    } = userObject;\n    dispatch({\n      type: 'LOG_IN',\n      user: {\n        username,\n        email,\n        password\n      }\n    });\n  };\n\n  const deleteUser = userObject => {};\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user,\n      signup,\n      toggleSignup,\n      addUser,\n      login,\n      deleteUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js"],"names":["React","useState","useReducer","createContext","useEffect","userService","userReducer","UserContext","UserContextProvider","props","user","dispatch","storedUser","localStorage","getItem","JSON","parse","signup","setSignup","users","getAll","thisUser","filter","acct","username","console","log","creatures","type","setItem","stringify","toggleSignup","addUser","userObject","login","email","password","deleteUser","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBT,UAAU,CAACI,WAAD,EAAc,EAAd,EAAkB,MAAM;AACzD,UAAMM,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAnB;AACA,WAAOF,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAH,GAA4B,EAA7C;AACD,GAHkC,CAAnC;AAKA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;AAEAG,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMe,KAAK,GAAG,MAAMd,WAAW,CAACe,MAAZ,EAApB;AAEA,UAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBd,IAAI,CAACc,QAA5C,CAAjB;AAEA,QAAI,CAACH,QAAL,EAAe,OAAO,KAAP,CALK,CAOpB;AACA;;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,SAArB;AAEAhB,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAE,UAAR;AAAoBlB,MAAAA,IAAI,EAAE;AACjCiB,QAAAA,SAAS,EAAEN,QAAQ,CAACM;AADa;AAA1B,KAAD,CAAR;AAGD,GAfQ,EAeN,CAACjB,IAAD,CAfM,CAAT;AAiBAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACgB,OAAb,CAAqB,SAArB,EAAgCd,IAAI,CAACe,SAAL,CAAepB,IAAf,CAAhC;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMqB,YAAY,GAAG,MAAM;AACzB,WAAOb,SAAS,CAAC,CAACD,MAAF,CAAhB;AACD,GAFD;;AAIA,QAAMe,OAAO,GAAG,MAAOC,UAAP,IAAsB;AACpC,UAAMd,KAAK,GAAG,MAAMd,WAAW,CAACe,MAAZ,EAApB;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,GAJD;;AAMA,QAAMe,KAAK,GAAGD,UAAU,IAAI;AAC1B,UAAM;AAAET,MAAAA,QAAF;AAAYW,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAAgCH,UAAtC;AAEAtB,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAE,QAAR;AAAkBlB,MAAAA,IAAI,EAAE;AAC/Bc,QAAAA,QAD+B;AACrBW,QAAAA,KADqB;AACdC,QAAAA;AADc;AAAxB,KAAD,CAAR;AAGD,GAND;;AAQA,QAAMC,UAAU,GAAGJ,UAAU,IAAI,CAAE,CAAnC;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC3BvB,MAAAA,IAD2B;AAE3BO,MAAAA,MAF2B;AAG3Bc,MAAAA,YAH2B;AAI3BC,MAAAA,OAJ2B;AAK3BE,MAAAA,KAL2B;AAM3BG,MAAAA;AAN2B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG5B,KAAK,CAAC6B,QART,CADF;AAYD,CA7DD;;AA+DA,eAAe9B,mBAAf","sourcesContent":["import React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n\n  const [signup, setSignup] = useState(true);\n\n  useEffect(async () => {\n    const users = await userService.getAll();\n\n    const thisUser = users.filter(acct => acct.username === user.username);\n    \n    if (!thisUser) return false;\n\n    // find user that matches login\n    // return .readUser(userId) method\n\n    console.log(thisUser.creatures);\n    \n    dispatch({ type: 'GET_DATA', user: {\n      creatures: thisUser.creatures\n    }});\n  }, [user]);\n\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const toggleSignup = () => {\n    return setSignup(!signup);\n  }\n\n  const addUser = async (userObject) => {\n    const users = await userService.getAll();\n\n    console.log(users);\n  }\n\n  const login = userObject => {\n    const { username, email, password } = userObject;\n\n    dispatch({ type: 'LOG_IN', user: {\n      username, email, password\n    }});\n  }\n\n  const deleteUser = userObject => {}\n\n  return (\n    <UserContext.Provider value={{\n      user,\n      signup,\n      toggleSignup,\n      addUser,\n      login,\n      deleteUser,\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}