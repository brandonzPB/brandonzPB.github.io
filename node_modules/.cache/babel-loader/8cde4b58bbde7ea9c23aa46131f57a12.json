{"ast":null,"code":"import _regeneratorRuntime from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{Link,Route,Redirect}from'react-router-dom';import{UserContext}from'../../contexts/UserContext';import{CreatureContext}from'../../contexts/CreatureContext';import userService from'../../services/userService';import'./user.css';var UserUpdateForm=function UserUpdateForm(){var _useContext=useContext(UserContext),user=_useContext.user,userDispatch=_useContext.userDispatch,removeUser=_useContext.removeUser;var _useContext2=useContext(CreatureContext),finish=_useContext2.finish;useEffect(function(){// Update user (creatures now have different ages and streak counts)\nif(!user.updated){userDispatch({type:'AUTO_UPDATE'});finish('db',null,'creatures');console.log('Streaks and ages updated',user);}},[]);var _useState=useState({username:'',email:'',confirmEmail:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),update=_useState2[0],setUpdate=_useState2[1];var _useState3=useState({ref:''}),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState({confirmDelete:false,confirmDeletePassword:''}),_useState6=_slicedToArray(_useState5,2),deleteUser=_useState6[0],setDeleteUser=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showPassword=_useState8[0],setShowPassword=_useState8[1];if(!user.accessToken){return/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/user/update\"},/*#__PURE__*/React.createElement(Redirect,{to:\"/\"}));}var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value,className=_event$target.className;if(className==='delete-user'){return setDeleteUser(_objectSpread(_objectSpread({},deleteUser),{},{confirmDeletePassword:value}));}setUpdate(_objectSpread(_objectSpread({},update),{},_defineProperty({},name,value)));};var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var username,email,password,userExists,emailExists;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();setError(_objectSpread(_objectSpread({},error),{},{ref:''}));if(!(!update.username.trim()&&!update.email.trim()&&!update.password.trim())){_context.next=4;break;}return _context.abrupt(\"return\",false);case 4:if(!update.username.trim()){_context.next=21;break;}if(!(update.username!==user.username)){_context.next=18;break;}_context.next=8;return userService.checkUsername('username',update.username,user,user.accessToken).then(function(res){return res;});case 8:userExists=_context.sent;if(!(userExists!=='Available')){_context.next=14;break;}console.log('Username is already taken');return _context.abrupt(\"return\",setError(_objectSpread(_objectSpread({},error),{},{ref:'username'})));case 14:console.log('Username is available');username=update.username;case 16:_context.next=19;break;case 18:username=update.username;case 19:_context.next=22;break;case 21:username=user.username;case 22:if(!update.email.trim()){_context.next=39;break;}if(!(update.email!==user.email)){_context.next=36;break;}_context.next=26;return userService.checkUsername('email',update.email,user,user.accessToken).then(function(res){return res;});case 26:emailExists=_context.sent;if(!(emailExists!=='Available')){_context.next=32;break;}console.log('Email is already taken');return _context.abrupt(\"return\",setError(_objectSpread(_objectSpread({},error),{},{ref:'email'})));case 32:console.log('Email is available');email=update.email;case 34:_context.next=37;break;case 36:email=update.email;case 37:_context.next=40;break;case 39:email=user.email;case 40:if(!update.password.trim()){_context.next=48;break;}if(!(update.password!==update.confirmPassword)){_context.next=45;break;}return _context.abrupt(\"return\",setError(_objectSpread(_objectSpread({},error),{},{ref:'password'})));case 45:password=update.password;case 46:_context.next=49;break;case 48:password=user.password;case 49:if(!(update.email.trim()!==update.confirmEmail)){_context.next=51;break;}return _context.abrupt(\"return\",setError(_objectSpread(_objectSpread({},error),{},{ref:'email'})));case 51:userDispatch({type:'UPDATE_USER',user:{username:username,email:email,password:password}});if(password!==user.password)finish('db',null,'updatePassword');else finish('db',null,'update');setUpdate(_objectSpread(_objectSpread({},update),{},{username:'',email:'',confirmEmail:'',password:'',confirmPassword:''}));case 54:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();var sendDelete=function sendDelete(event){event.preventDefault();if(!deleteUser.confirmDelete){return setDeleteUser(_objectSpread(_objectSpread({},deleteUser),{},{confirmDelete:true,confirmDeletePassword:''}));}if(deleteUser.confirmDeletePassword===user.password){removeUser();finish('db',null,'delete');}};var viewPassword=function viewPassword(event){event.preventDefault();setShowPassword(!showPassword);};return/*#__PURE__*/React.createElement(\"div\",{className:\"user-info\"},/*#__PURE__*/React.createElement(Link,{to:\"/creatures\"},/*#__PURE__*/React.createElement(\"p\",{className:\"view-creatures-link\"},\"View Creatures\")),/*#__PURE__*/React.createElement(\"div\",{className:\"user-update-form\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"span\",{className:\"form-title\"},\"Edit User Info\"),/*#__PURE__*/React.createElement(\"span\",{className:\"user-info-tip\"},\"Leave any field blank if you don't want to change it\"),/*#__PURE__*/React.createElement(\"div\",{className:\"username-label\"},/*#__PURE__*/React.createElement(\"label\",null,\"New Username: \")),/*#__PURE__*/React.createElement(\"div\",{className:\"username-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"username\",minLength:2,value:update.username,onChange:handleChange,placeholder:user.username,style:{border:error.ref==='username'?'2px solid red':'none'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"email-label\"},/*#__PURE__*/React.createElement(\"label\",null,\"New Email: \")),/*#__PURE__*/React.createElement(\"div\",{className:\"email-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",value:update.email,onChange:handleChange,placeholder:user.email,style:{border:error.ref==='email'?'2px solid red':'none'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"email-label\"},/*#__PURE__*/React.createElement(\"label\",null,\"Confirm New Email: \")),/*#__PURE__*/React.createElement(\"div\",{className:\"email-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"confirmEmail\",value:update.confirmEmail,onChange:handleChange,style:{border:error.ref==='email'?'2px solid red':'none'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"password-label\"},/*#__PURE__*/React.createElement(\"label\",null,\"New Password: \")),/*#__PURE__*/React.createElement(\"div\",{className:\"password-input first-password-input\"},/*#__PURE__*/React.createElement(\"input\",{type:showPassword?'text':'password',name:\"password\",value:update.password,onChange:handleChange,style:{border:error.ref==='password'?'2px solid red':'none'}}),/*#__PURE__*/React.createElement(\"button\",{className:\"show-password-btn\",onClick:viewPassword},\"\\uD83D\\uDC41\")),/*#__PURE__*/React.createElement(\"div\",{className:\"password-label\"},/*#__PURE__*/React.createElement(\"label\",null,\"Confirm New Password: \")),/*#__PURE__*/React.createElement(\"div\",{className:\"password-input\"},/*#__PURE__*/React.createElement(\"input\",{type:showPassword?'text':'password',name:\"confirmPassword\",value:update.confirmPassword,onChange:handleChange,style:{border:error.ref==='password'?'2px solid red':'none'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"update-user-btn-container\"},/*#__PURE__*/React.createElement(\"button\",{onClick:handleSubmit,className:\"update-user-btn\"},\"Update User\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"delete-user-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"delete-user-btn-container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"delete-title\"},\"Delete User\"),/*#__PURE__*/React.createElement(\"button\",{className:\"delete-user-btn\",onClick:sendDelete},\"Delete User\")),/*#__PURE__*/React.createElement(\"div\",{className:\"confirm-delete\",style:{display:deleteUser.confirmDelete?'flex':'none'}},/*#__PURE__*/React.createElement(\"label\",null,\"Please enter your password to confirm\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",name:\"confirmDeletePassword\",className:\"delete-user\",value:deleteUser.confirmDeletePassword,onChange:handleChange,style:{border:error.ref==='delete'?'2px solid red':'none'}}),/*#__PURE__*/React.createElement(\"button\",{className:\"confirm-delete-user-btn\",onClick:sendDelete},\"Confirm Delete\"))));};export default UserUpdateForm;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/user/UserUpdateForm.js"],"names":["React","useState","useContext","useEffect","Link","Route","Redirect","UserContext","CreatureContext","userService","UserUpdateForm","user","userDispatch","removeUser","finish","updated","type","console","log","username","email","confirmEmail","password","confirmPassword","update","setUpdate","ref","error","setError","confirmDelete","confirmDeletePassword","deleteUser","setDeleteUser","showPassword","setShowPassword","accessToken","handleChange","event","target","name","value","className","handleSubmit","preventDefault","trim","checkUsername","then","res","userExists","emailExists","sendDelete","viewPassword","border","display"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link, Route, Redirect } from 'react-router-dom';\nimport { UserContext } from '../../contexts/UserContext';\nimport { CreatureContext } from '../../contexts/CreatureContext';\nimport userService from '../../services/userService';\nimport './user.css';\n\nconst UserUpdateForm = () => {\n  const { user, userDispatch, removeUser, } = useContext(UserContext);\n  const { finish } = useContext(CreatureContext);\n\n  useEffect(() => {\n    // Update user (creatures now have different ages and streak counts)\n\n    if (!user.updated) {\n      userDispatch({ type: 'AUTO_UPDATE' });\n      finish('db', null, 'creatures');\n      console.log('Streaks and ages updated', user);\n    }\n  }, []);\n\n  const [update, setUpdate] = useState({\n    username: '',\n    email: '',\n    confirmEmail: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [error, setError] = useState({ ref: '' });\n  \n  const [deleteUser, setDeleteUser] = useState({\n    confirmDelete: false,\n    confirmDeletePassword: '',\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  if (!user.accessToken) {\n    return (\n      <Route exact path=\"/user/update\">\n        <Redirect to=\"/\" />\n      </Route>\n    )\n  }\n\n  const handleChange = event => {\n    const { name, value, className } = event.target;\n\n    if (className === 'delete-user') {\n      return setDeleteUser({\n        ...deleteUser,\n        confirmDeletePassword: value\n      });\n    }\n\n    setUpdate({\n      ...update,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    setError({\n      ...error,\n      ref: '',\n    });\n\n    let username;\n    let email;\n    let password;\n\n    if (!update.username.trim() && !update.email.trim() && !update.password.trim()) {\n      return false;\n    }\n\n    if (update.username.trim()) {\n      if (update.username !== user.username) {\n        const userExists = await userService.checkUsername('username', update.username, user, user.accessToken).then(res => res);\n\n        if (userExists !== 'Available') {\n          console.log('Username is already taken');\n\n          return setError({\n            ...error,\n            ref: 'username'\n          });\n        } else {\n          console.log('Username is available');\n          username = update.username;\n        }\n      } else {\n        username = update.username;\n      }\n    } else {\n      username = user.username;\n    }\n\n    if (update.email.trim()) {\n      if (update.email !== user.email) {\n        const emailExists = await userService.checkUsername('email', update.email, user, user.accessToken).then(res => res);\n\n        if (emailExists !== 'Available') {\n          console.log('Email is already taken');\n\n          return setError({\n            ...error,\n            ref: 'email'\n          });\n        } else {\n          console.log('Email is available');\n          email = update.email;\n        }\n      } else {\n        email = update.email;\n      }\n    } else {\n      email = user.email;\n    }\n\n    if (update.password.trim()) {\n      if (update.password !== update.confirmPassword) {\n        return setError({\n          ...error,\n          ref: 'password'\n        });\n      } else {\n        password = update.password;\n      }\n    } else {\n      password = user.password;\n    }\n\n    if (update.email.trim() !== update.confirmEmail) {\n      return setError({\n        ...error,\n        ref: 'email'\n      });\n    }\n\n    userDispatch({ type: 'UPDATE_USER', user: {\n      username, email, password\n    }});\n\n    if (password !== user.password) finish('db', null, 'updatePassword');\n    else finish('db', null, 'update');\n\n    setUpdate({\n      ...update,\n      username: '',\n      email: '',\n      confirmEmail: '',\n      password: '',\n      confirmPassword: '',\n    });\n  }\n\n  const sendDelete = event => {\n    event.preventDefault();\n\n    if (!deleteUser.confirmDelete) {\n      return setDeleteUser({\n        ...deleteUser,\n        confirmDelete: true,\n        confirmDeletePassword: '',\n      });\n    }\n\n    if (deleteUser.confirmDeletePassword === user.password) {\n      removeUser();\n\n      finish('db', null, 'delete');\n    }\n  }\n\n  const viewPassword = (event) => {\n    event.preventDefault();\n\n    setShowPassword(!showPassword);\n  }\n\n  return (\n    <div className=\"user-info\">\n      <Link to=\"/creatures\">\n        <p className=\"view-creatures-link\">View Creatures</p>\n      </Link>\n\n      <div className=\"user-update-form\">\n        <form onSubmit={handleSubmit}>\n          <span className=\"form-title\">Edit User Info</span>\n          <span className=\"user-info-tip\">Leave any field blank if you don't want to change it</span>\n\n          <div className=\"username-label\">\n            <label>New Username: </label>\n          </div>\n\n          <div className=\"username-input\">\n            <input \n              type=\"text\"\n              name=\"username\"\n              minLength={2}\n              value={update.username}\n              onChange={handleChange}\n              placeholder={user.username}\n              style={{\n                border: error.ref === 'username' ? '2px solid red' : 'none'\n              }}\n            />\n          </div>\n\n          <div className=\"email-label\">\n            <label>New Email: </label>\n          </div>\n\n          <div className=\"email-input\">\n            <input \n              type=\"email\"\n              name=\"email\"\n              value={update.email}\n              onChange={handleChange}\n              placeholder={user.email}\n              style={{\n                border: error.ref === 'email' ? '2px solid red' : 'none'\n              }}\n            />\n          </div>\n\n          <div className=\"email-label\">\n            <label>Confirm New Email: </label>\n          </div>\n\n          <div className=\"email-input\">\n            <input \n              type=\"email\"\n              name=\"confirmEmail\"\n              value={update.confirmEmail}\n              onChange={handleChange}\n              style={{\n                border: error.ref === 'email' ? '2px solid red' : 'none'\n              }}\n            />\n          </div>\n\n          <div className=\"password-label\">\n            <label>New Password: </label>\n          </div>\n\n          <div className=\"password-input first-password-input\">\n            <input \n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              value={update.password}\n              onChange={handleChange}\n              style={{\n                border: error.ref === 'password' ? '2px solid red' : 'none'\n              }}\n            />\n            <button className=\"show-password-btn\" onClick={viewPassword}>&#128065;</button>\n          </div>\n\n          <div className=\"password-label\">\n            <label>Confirm New Password: </label>\n          </div>\n\n          <div className=\"password-input\">\n            <input \n              type={showPassword ? 'text' : 'password'}\n              name=\"confirmPassword\"\n              value={update.confirmPassword}\n              onChange={handleChange}\n              style={{\n                border: error.ref === 'password' ? '2px solid red' : 'none'\n              }}\n            />\n          </div>\n\n          <div className=\"update-user-btn-container\">\n            <button onClick={handleSubmit} className=\"update-user-btn\">Update User</button>\n          </div>\n        </form>\n      </div>\n\n      <div className=\"delete-user-container\">\n        <div className=\"delete-user-btn-container\">\n          <span className=\"delete-title\">Delete User</span>\n          <button className=\"delete-user-btn\" onClick={sendDelete}>Delete User</button>\n        </div>\n\n        <div className=\"confirm-delete\" style={{ display: deleteUser.confirmDelete ? 'flex' : 'none' }}>\n          <label>Please enter your password to confirm</label>\n          <input \n            type=\"password\"\n            name=\"confirmDeletePassword\"\n            className=\"delete-user\"\n            value={deleteUser.confirmDeletePassword}\n            onChange={handleChange}\n            style={{\n                  border: error.ref === 'delete' ? '2px solid red' : 'none'\n            }}\n          />\n          <button className=\"confirm-delete-user-btn\" onClick={sendDelete}>Confirm Delete</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserUpdateForm;\n"]},"metadata":{},"sourceType":"module"}