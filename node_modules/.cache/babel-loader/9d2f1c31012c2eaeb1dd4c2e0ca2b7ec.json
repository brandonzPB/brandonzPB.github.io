{"ast":null,"code":"import _regeneratorRuntime from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useReducer,createContext,useEffect}from'react';import userService from'../services/userService';import userReducer from'../reducers/userReducer';export var UserContext=createContext();var UserContextProvider=function UserContextProvider(props){var _useReducer=useReducer(userReducer,{},function(){var storedUser=localStorage.getItem('my-user');return storedUser?JSON.parse(storedUser):{};}),_useReducer2=_slicedToArray(_useReducer,2),user=_useReducer2[0],userDispatch=_useReducer2[1];var _useState=useState({success:false}),_useState2=_slicedToArray(_useState,2),createResult=_useState2[0],setCreateResult=_useState2[1];var _useState3=useState({resetToken:'',email:'',code:'',passwordReset:false}),_useState4=_slicedToArray(_useState3,2),reset=_useState4[0],setReset=_useState4[1];useEffect(function(){localStorage.setItem('my-user',JSON.stringify(user));console.log('user',user);console.log(user.accessToken);},[user]);useEffect(function(){localStorage.setItem('my-reset',JSON.stringify(reset));console.log('reset',reset);},[reset]);// GET localStorage creatures\nvar getLocalCreatures=function getLocalCreatures(){var creatureStorage=localStorage.getItem('my-creatures');return creatureStorage?JSON.parse(creatureStorage):[];};// POST localStorage creatures\nvar postLocalCreatures=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId,creatures,token){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return userService.storeLocalCreatures(userId,creatures,token).then(function(res){return res;}).catch(function(err){return console.error(err);});case 2:userDispatch({type:'POST_LOCAL_CREATURES',creatures:{creatures:creatures}});case 3:case\"end\":return _context.stop();}}},_callee);}));return function postLocalCreatures(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var refreshUser=function refreshUser(){console.log('Refreshing!');userService.readUser(user.db_id,user.accessToken).then(function(res){console.log(res);userDispatch({type:'REFRESH_USER',user:{username:res.user.username,email:res.user.email,password:res.user.password,db_id:user.db_id,accessToken:user.accessToken,creatures:res.user_creatures}});return res;}).catch(function(err){return console.error(err);});};var updateUser=function updateUser(method){console.log('Updating user...');userService.updateUser(method,user.db_id,user,user.accessToken).then(function(res){console.log('res',res);return res;}).catch(function(err){return console.error(err);});};// GET user info\nvar getUserInfo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res,password){var storedCreatures;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('Successfully logged in',res.db_id,res.accessToken);_context2.next=3;return getLocalCreatures();case 3:storedCreatures=_context2.sent;console.log(storedCreatures);if(storedCreatures.length>=1){postLocalCreatures(res.db_id,storedCreatures,res.accessToken);console.log('Retrieved localStorage creatures');localStorage.removeItem('my-creatures');console.log('Cleared \\'my-creatures\\' from localStorage');}_context2.next=8;return userService.readUser(res.db_id,res.accessToken).then(function(response){console.log(response);var newDay=new Date().getDay();var newTime=Date.now();userDispatch({type:'LOG_IN',user:{username:response.user.username,email:response.user.email,password:password,db_password:response.user.password,db_id:res.db_id,accessToken:res.accessToken,creatures:storedCreatures.length>=1?storedCreatures:response.user_creatures,newDay:newDay,newTime:newTime}});console.log('Successfully retrieved user data');}).catch(function(err){return console.error(err);});case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function getUserInfo(_x4,_x5){return _ref2.apply(this,arguments);};}();// DELETE user\nvar removeUser=function removeUser(){console.log('Deleting user...');localStorage.removeItem('my-user');localStorage.removeItem('my-reset');userService.deleteUser(user.db_id,user,user.accessToken).then(function(res){return res;}).catch(function(err){return console.error(err);});console.log('Successfully deleted user');};// LOG OUT\nvar logout=function logout(){userDispatch({type:'LOG_OUT'});localStorage.removeItem('my-reset');localStorage.removeItem('my-user');};return/*#__PURE__*/React.createElement(UserContext.Provider,{value:{user:user,userDispatch:userDispatch,getUserInfo:getUserInfo,refreshUser:refreshUser,updateUser:updateUser,createResult:createResult,setCreateResult:setCreateResult,reset:reset,setReset:setReset,postLocalCreatures:postLocalCreatures,removeUser:removeUser,logout:logout}},props.children);};export default UserContextProvider;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js"],"names":["React","useState","useReducer","createContext","useEffect","userService","userReducer","UserContext","UserContextProvider","props","storedUser","localStorage","getItem","JSON","parse","user","userDispatch","success","createResult","setCreateResult","resetToken","email","code","passwordReset","reset","setReset","setItem","stringify","console","log","accessToken","getLocalCreatures","creatureStorage","postLocalCreatures","userId","creatures","token","storeLocalCreatures","then","res","catch","err","error","type","refreshUser","readUser","db_id","username","password","user_creatures","updateUser","method","getUserInfo","storedCreatures","length","removeItem","response","newDay","Date","getDay","newTime","now","db_password","removeUser","deleteUser","logout","children"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [user, userDispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n\n  const [createResult, setCreateResult] = useState({ success: false });\n\n  const [reset, setReset] = useState({\n    resetToken: '',\n    email: '',\n    code: '',\n    passwordReset: false\n  });\n\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n\n    console.log('user', user);\n    console.log(user.accessToken);\n  }, [user]);\n\n  useEffect(() => {\n    localStorage.setItem('my-reset', JSON.stringify(reset));\n\n    console.log('reset', reset);\n  }, [reset]);\n  \n  // GET localStorage creatures\n  const getLocalCreatures = () => {\n    const creatureStorage = localStorage.getItem('my-creatures');\n    \n    return creatureStorage ? JSON.parse(creatureStorage) : [];\n  }\n\n  // POST localStorage creatures\n  const postLocalCreatures = async (userId, creatures, token) => {\n    await userService\n      .storeLocalCreatures(userId, creatures, token)\n      .then(res => res)\n      .catch(err => console.error(err));\n\n    userDispatch({ type: 'POST_LOCAL_CREATURES', creatures: { creatures }});\n  }\n\n  const refreshUser = () => {\n    console.log('Refreshing!');\n\n    userService.readUser(user.db_id, user.accessToken)\n      .then(res => {\n        console.log(res);\n\n        userDispatch({ type: 'REFRESH_USER', user: {\n          username: res.user.username,\n          email: res.user.email,\n          password: res.user.password,\n          db_id: user.db_id,\n          accessToken: user.accessToken,\n          creatures: res.user_creatures,\n        }});\n\n        return res;\n      })\n      .catch(err => console.error(err));\n  }\n\n  const updateUser = (method) => {\n    console.log('Updating user...');\n\n    userService.updateUser(method, user.db_id, user, user.accessToken)\n      .then(res => {\n        console.log('res', res);\n        return res;\n      })\n      .catch(err => console.error(err));\n  }\n\n  // GET user info\n  const getUserInfo = async (res, password) => {\n    console.log('Successfully logged in', res.db_id, res.accessToken);\n\n    const storedCreatures = await getLocalCreatures();\n\n    console.log(storedCreatures);\n\n    if (storedCreatures.length >= 1) {\n      postLocalCreatures(res.db_id, storedCreatures, res.accessToken);\n      console.log('Retrieved localStorage creatures');\n\n      localStorage.removeItem('my-creatures');\n      console.log('Cleared \\'my-creatures\\' from localStorage');\n    }\n\n    await userService.readUser(res.db_id, res.accessToken)\n      .then(response => {\n        console.log(response);\n\n        const newDay = (new Date()).getDay();\n        const newTime = Date.now();\n\n        userDispatch({ type: 'LOG_IN', user: {\n          username: response.user.username,\n          email: response.user.email,\n          password,\n          db_password: response.user.password,\n          db_id: res.db_id,\n          accessToken: res.accessToken,\n          creatures: storedCreatures.length >= 1 ? storedCreatures : response.user_creatures,\n          newDay,\n          newTime,\n        }});\n\n        console.log('Successfully retrieved user data');\n      })\n      .catch(err => console.error(err));\n  }\n\n  // DELETE user\n  const removeUser = () => {\n    console.log('Deleting user...');\n    \n    localStorage.removeItem('my-user');\n    localStorage.removeItem('my-reset');\n\n    userService.deleteUser(user.db_id, user, user.accessToken)\n      .then(res => res)\n      .catch(err => console.error(err));\n\n    console.log('Successfully deleted user');\n  }\n\n  // LOG OUT\n  const logout = () => {\n    userDispatch({ type: 'LOG_OUT' });\n    localStorage.removeItem('my-reset');\n    localStorage.removeItem('my-user');\n  }\n\n  return (\n    <UserContext.Provider value={{\n      user,\n      userDispatch,\n      getUserInfo,\n      refreshUser,\n      updateUser,\n      createResult,\n      setCreateResult,\n      reset,\n      setReset,\n      postLocalCreatures,\n      removeUser,\n      logout,\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}