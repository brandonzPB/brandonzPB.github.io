{"ast":null,"code":"import axios from'axios';var baseUrl='/dashboard/user';// GET all creatures\nvar getAll=function getAll(userId,token){var req=axios.get(\"\".concat(baseUrl,\"/\").concat(userId,\"/creatures\"),{headers:{'Authorization':\"Bearer \".concat(token)}});return req.then(function(res){return res.data;}).catch(function(err){return console.error(err);});};// CREATE creature\nvar createCreature=function createCreature(userId,creatureObject,token){var req=axios.post(\"\".concat(baseUrl,\"/\").concat(userId,\"/creature/create\"),creatureObject,{headers:{'Authorization':\"Bearer \".concat(token)}});return req.then(function(res){return res.data;});};// READ creature\nvar readCreature=function readCreature(userId,creatureId,token){var req=axios.get(\"\".concat(baseUrl,\"/\").concat(userId,\"/creature/\").concat(creatureId),{headers:{'Authorization':\"Bearer \".concat(token)}});return req.then(function(res){return res.data;});};// UPDATE creature stats\nvar updateCreatureStats=function updateCreatureStats(userId,creatureId,creatureObject,token){var req=axios.put(\"\".concat(baseUrl,\"/\").concat(userId,\"/creature/\").concat(creatureId),creatureObject,{headers:{'Authorization':\"Bearer \".concat(token)}});return req.then(function(res){return res.data;});};// UPDATE objective\nvar updateObjectives=function updateObjectives(userId,creatureId,objectives,token){var req=axios.put(\"\".concat(baseUrl,\"/\").concat(userId,\"/creature/\").concat(creatureId,\"/objectives\"),objectives,{headers:{'Authorization':\"Bearer \".concat(token)}});return req.then(function(res){return res.data;});};// DELETE objective\nvar deleteObjective=function deleteObjective(userId,creatureId,objectives,token){var req=axios.put(\"\".concat(baseUrl,\"/\").concat(userId,\"/creature/\").concat(creatureId,\"/objective\"),objectives,{headers:{'Authorization':\"Bearer \".concat(token)}});return req.then(function(res){return res.data;});};// UPDATE creature info\nvar updateCreatureInfo=function updateCreatureInfo(userId,creatureId,creatureObject,token){var req=axios.put(\"\".concat(baseUrl,\"/\").concat(userId,\"/creature/\").concat(creatureId,\"/info\"),creatureObject,{headers:{'Authorization':\"Bearer \".concat(token)}});return req.then(function(res){return res.data;});};// DELETE creature\nvar deleteCreature=function deleteCreature(userId,creatureId,token){var req=axios.delete(\"\".concat(baseUrl,\"/\").concat(userId,\"/creature/\").concat(creatureId,\"/delete\"),{headers:{'Authorization':\"Bearer \".concat(token)}});return req.then(function(res){return res.data;});};export default{getAll:getAll,createCreature:createCreature,readCreature:readCreature,updateCreatureStats:updateCreatureStats,updateObjectives:updateObjectives,deleteObjective:deleteObjective,updateCreatureInfo:updateCreatureInfo,deleteCreature:deleteCreature};","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/services/creatureService.js"],"names":["axios","baseUrl","getAll","userId","token","req","get","headers","then","res","data","catch","err","console","error","createCreature","creatureObject","post","readCreature","creatureId","updateCreatureStats","put","updateObjectives","objectives","deleteObjective","updateCreatureInfo","deleteCreature","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/dashboard/user';\n\n// GET all creatures\nconst getAll = (userId, token) => {\n  const req = axios.get(`${baseUrl}/${userId}/creatures`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// CREATE creature\nconst createCreature = (userId, creatureObject, token) => {\n  const req = axios.post(`${baseUrl}/${userId}/creature/create`, creatureObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data);\n};\n\n// READ creature\nconst readCreature = (userId, creatureId, token) => {\n  const req = axios.get(`${baseUrl}/${userId}/creature/${creatureId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data);\n};\n\n// UPDATE creature stats\nconst updateCreatureStats = (userId, creatureId, creatureObject, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/creature/${creatureId}`, creatureObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  \n  return req.then(res => res.data);\n};\n\n// UPDATE objective\nconst updateObjectives = (userId, creatureId, objectives, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/creature/${creatureId}/objectives`, objectives, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    }\n  });\n\n  return req.then(res => res.data);\n};\n\n// DELETE objective\nconst deleteObjective = (userId, creatureId, objectives, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/creature/${creatureId}/objective`, objectives, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  return req.then(res => res.data);\n}\n\n// UPDATE creature info\nconst updateCreatureInfo = (userId, creatureId, creatureObject, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/creature/${creatureId}/info`, creatureObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data);\n};\n\n// DELETE creature\nconst deleteCreature = (userId, creatureId, token) => {\n  const req = axios.delete(`${baseUrl}/${userId}/creature/${creatureId}/delete`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data);\n};\n\nexport default {\n  getAll,\n  createCreature,\n  readCreature,\n  updateCreatureStats,\n  updateObjectives,\n  deleteObjective,\n  updateCreatureInfo,\n  deleteCreature,\n};\n"]},"metadata":{},"sourceType":"module"}