{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/ConfirmDisplayContext.js\";\nimport React, { useState, createContext } from 'react';\nexport const ConfirmDisplayContext = createContext();\n\nconst ConfirmDisplayContextProvider = props => {\n  const [confirmDisplay, setConfirmDisplay] = useState({\n    confirmIsDisplayed: false\n  });\n\n  const toggleConfirmDisplay = () => {\n    setConfirmDisplay({\n      confirmIsDisplayed: !confirmDisplay.confirmIsDisplayed\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ConfirmDisplayContext.Provider, {\n    value: {\n      confirmDisplay,\n      toggleConfirmDisplay\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ConfirmDisplayContextProvider;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/ConfirmDisplayContext.js"],"names":["React","useState","createContext","ConfirmDisplayContext","ConfirmDisplayContextProvider","props","confirmDisplay","setConfirmDisplay","confirmIsDisplayed","toggleConfirmDisplay","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,qBAAqB,GAAGD,aAAa,EAA3C;;AAEP,MAAME,6BAA6B,GAAIC,KAAD,IAAW;AAC/C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC;AACnDO,IAAAA,kBAAkB,EAAE;AAD+B,GAAD,CAApD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjCF,IAAAA,iBAAiB,CAAC;AAChBC,MAAAA,kBAAkB,EAAE,CAACF,cAAc,CAACE;AADpB,KAAD,CAAjB;AAGD,GAJD;;AAMA,sBACE,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAE;AAACF,MAAAA,cAAD;AAAiBG,MAAAA;AAAjB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,QADT,CADF;AAKD,CAhBD;;AAkBA,eAAeN,6BAAf","sourcesContent":["import React, { useState, createContext } from 'react';\n\nexport const ConfirmDisplayContext = createContext();\n\nconst ConfirmDisplayContextProvider = (props) => {\n  const [confirmDisplay, setConfirmDisplay] = useState({\n    confirmIsDisplayed: false\n  });\n\n  const toggleConfirmDisplay = () => {\n    setConfirmDisplay({\n      confirmIsDisplayed: !confirmDisplay.confirmIsDisplayed\n    });\n  };\n\n  return (\n    <ConfirmDisplayContext.Provider value={{confirmDisplay, toggleConfirmDisplay}}>\n      {props.children}\n    </ConfirmDisplayContext.Provider>\n  )\n}\n\nexport default ConfirmDisplayContextProvider;\n"]},"metadata":{},"sourceType":"module"}