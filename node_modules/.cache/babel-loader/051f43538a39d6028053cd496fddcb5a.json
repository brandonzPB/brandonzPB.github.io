{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js\";\nimport React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\nexport const UserContext = createContext();\n\nconst UserContextProvider = props => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n  const [thisUser, setThisUser] = useState({\n    isLoggedIn: false,\n    username: '',\n    password: ''\n  });\n  const [signup, setSignup] = useState(true);\n  const [error, setError] = useState({\n    error: null\n  });\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const toggleSignup = () => {\n    return setSignup(!signup);\n  };\n\n  const addUser = async userObject => {\n    userService.createUser(userObject).then(res => {\n      if (res === false) {\n        setError({ ...error,\n          error: true\n        });\n      } else {\n        setError({ ...error,\n          error: null\n        });\n      }\n    }).catch(err => console.error(err));\n  };\n\n  const login = async userObject => {\n    const {\n      username,\n      email,\n      password\n    } = userObject;\n    userService.login({\n      username: username || email,\n      password\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.error(err);\n    });\n    /* try {\n      const user = await userService.login({\n        username: username || email,\n        password\n      });\n       setThisUser({\n        ...thisUser,\n        isLoggedIn: true,\n        username: username || email,\n        password: password\n      });\n       console.log(user);\n     } catch (exception) {\n      throw new Error('Wrong credentials');\n    } */\n\n    /* const users = await userService.getAll();\n     const thisUser = users.filter(acct => acct.username === user.username);\n    \n    if (!thisUser) return false; */\n\n    /* getLocalCreatures(); */\n\n    /* userService\n      .login(thisUser)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        return console.error(err);\n      }); */\n\n    /* dispatch({ type: 'LOG_IN', user: {\n      username, email, password,\n      creatures: thisUser.creatures,\n    }}); */\n  };\n\n  const getLocalCreatures = () => {\n    const creatureStorage = localStorage.getItem('my-creatures');\n    const storedCreatures = creatureStorage ? JSON.parse(creatureStorage) : [];\n    console.log(storedCreatures);\n    dispatch({\n      type: 'GET_LOCAL_CREATURES',\n      user: {\n        creatures: storedCreatures\n      }\n    });\n    return false;\n  };\n\n  const deleteUser = userObject => {};\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user,\n      thisUser,\n      signup,\n      toggleSignup,\n      error,\n      setError,\n      addUser,\n      login,\n      deleteUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/contexts/UserContext.js"],"names":["React","useState","useReducer","createContext","useEffect","userService","userReducer","UserContext","UserContextProvider","props","user","dispatch","storedUser","localStorage","getItem","JSON","parse","thisUser","setThisUser","isLoggedIn","username","password","signup","setSignup","error","setError","setItem","stringify","toggleSignup","addUser","userObject","createUser","then","res","catch","err","console","login","email","log","getLocalCreatures","creatureStorage","storedCreatures","type","creatures","deleteUser","children"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, createContext, useEffect } from 'react';\nimport userService from '../services/userService';\nimport userReducer from '../reducers/userReducer';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [user, dispatch] = useReducer(userReducer, {}, () => {\n    const storedUser = localStorage.getItem('my-user');\n    return storedUser ? JSON.parse(storedUser) : {};\n  });\n\n  const [thisUser, setThisUser] = useState({\n    isLoggedIn: false,\n    username: '',\n    password: ''\n  });\n\n  const [signup, setSignup] = useState(true);\n  const [error, setError] = useState({\n    error: null\n  });\n\n  useEffect(() => {\n    localStorage.setItem('my-user', JSON.stringify(user));\n  }, [user]);\n\n  const toggleSignup = () => {\n    return setSignup(!signup);\n  }\n\n  const addUser = async (userObject) => {\n\n    userService.createUser(userObject)\n      .then(res => {\n        if (res === false) {\n          setError({\n            ...error,\n            error: true\n          });\n        } else {\n          setError({\n            ...error,\n            error: null\n          });\n        }\n      })\n      .catch(err => console.error(err));\n  }\n\n  const login = async (userObject) => {\n    const { username, email, password } = userObject;\n\n    userService.login({\n      username: username || email,\n      password\n    })\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n    /* try {\n      const user = await userService.login({\n        username: username || email,\n        password\n      });\n\n      setThisUser({\n        ...thisUser,\n        isLoggedIn: true,\n        username: username || email,\n        password: password\n      });\n\n      console.log(user);\n\n    } catch (exception) {\n      throw new Error('Wrong credentials');\n    } */\n\n    /* const users = await userService.getAll();\n\n    const thisUser = users.filter(acct => acct.username === user.username);\n    \n    if (!thisUser) return false; */\n\n    /* getLocalCreatures(); */\n\n    /* userService\n      .login(thisUser)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        return console.error(err);\n      }); */\n\n    /* dispatch({ type: 'LOG_IN', user: {\n      username, email, password,\n      creatures: thisUser.creatures,\n    }}); */\n  }\n\n  const getLocalCreatures = () => {\n    const creatureStorage = localStorage.getItem('my-creatures');\n    \n    const storedCreatures = creatureStorage ? JSON.parse(creatureStorage) : [];\n\n    console.log(storedCreatures);\n\n    dispatch({ type: 'GET_LOCAL_CREATURES', user: {\n      creatures: storedCreatures\n    }});\n\n    return false;\n  }\n\n  const deleteUser = userObject => {}\n\n  return (\n    <UserContext.Provider value={{\n      user,\n      thisUser,\n      signup,\n      toggleSignup,\n      error,\n      setError,\n      addUser,\n      login,\n      deleteUser,\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}