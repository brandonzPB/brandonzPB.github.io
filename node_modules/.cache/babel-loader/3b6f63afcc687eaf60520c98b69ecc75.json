{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/user/ForgotPassword.js\";\nimport React, { useState, useContext } from 'react';\nimport { Link, Route, Redirect } from 'react-router-dom';\nimport userService from '../../services/userService';\nimport { UserContext } from '../../contexts/UserContext';\nimport './user.css';\n\nconst ForgotPassword = () => {\n  const {\n    reset,\n    setReset\n  } = useContext(UserContext);\n  const [form, setForm] = useState({\n    email: ''\n  });\n  const [error, setError] = useState({\n    upset: false\n  });\n  const [loading, setLoading] = useState({\n    state: false\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError({ ...error,\n      upset: false\n    });\n    setLoading({ ...loading,\n      state: false\n    });\n    let emailExists;\n\n    if (form.email.trim()) {\n      emailExists = await userService.postResetRequest(form.email);\n    } else {\n      return setError({ ...error,\n        upset: true\n      });\n    }\n\n    if (emailExists) {\n      setLoading({ ...loading,\n        state: true\n      });\n      const resetToken = await userService.getResetCode(form.email);\n      setReset({ ...reset,\n        resetToken: resetToken.reset_token,\n        email: form.email\n      });\n    }\n  };\n\n  if (reset.resetToken.trim()) {\n    return /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/user/reset/forgot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/user/reset/code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forgot-password-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"return-home-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Return Home\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    style: {\n      display: loading.state ? 'flex' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"loading-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Sending code...\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-forgot-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Enter Email: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"forgot-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Page will redirect once email has been sent\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: form.email,\n    onChange: handleChange,\n    style: {\n      border: error.upset ? '2px solid red' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"get-reset-code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"get-code-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Get Code\"))));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/user/ForgotPassword.js"],"names":["React","useState","useContext","Link","Route","Redirect","userService","UserContext","ForgotPassword","reset","setReset","form","setForm","email","error","setError","upset","loading","setLoading","state","handleChange","event","name","value","target","handleSubmit","preventDefault","emailExists","trim","postResetRequest","resetToken","getResetCode","reset_token","display","border"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link, Route, Redirect } from 'react-router-dom';\nimport userService from '../../services/userService';\nimport { UserContext } from '../../contexts/UserContext';\nimport './user.css';\n\nconst ForgotPassword = () => {\n  const { reset, setReset } = useContext(UserContext);\n\n  const [form, setForm] = useState({ email: '' });\n\n  const [error, setError] = useState({ upset: false });\n\n  const [loading, setLoading] = useState({ state: false });\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setForm({\n      ...form,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    setError({\n      ...error,\n      upset: false\n    });\n\n    setLoading({\n      ...loading,\n      state: false\n    });\n\n    let emailExists;\n\n   if (form.email.trim()) {\n      emailExists = await userService.postResetRequest(form.email);\n    } else {\n      return setError({\n        ...error,\n        upset: true\n      });\n    }\n\n    if (emailExists) {\n      setLoading({\n        ...loading,\n        state: true\n      });\n\n      const resetToken = await userService.getResetCode(form.email);\n\n      setReset({\n        ...reset,\n        resetToken: resetToken.reset_token,\n        email: form.email\n      });\n    }\n  }\n\n  if (reset.resetToken.trim()) {\n    return (\n      <Route exact path=\"/user/reset/forgot\">\n        <Redirect to=\"/user/reset/code\" />\n      </Route>\n    )\n  }\n\n  return (\n    <div className=\"forgot-password-form\">\n      <Link to=\"/\">\n        <p className=\"return-home-link\">Return Home</p>\n      </Link>\n      <div className=\"loading\" style={{ display: loading.state ? 'flex' : 'none' }}>\n        <span className=\"loading-text\">Sending code...</span>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"email-forgot-input\">\n          <label>Enter Email: </label>\n          <span className=\"forgot-info\">Page will redirect once email has been sent</span>\n          <input \n            type=\"text\"\n            name=\"email\"\n            value={form.email}\n            onChange={handleChange}\n            style={{\n              border: error.upset ? '2px solid red' : 'none'\n            }}\n          />\n        </div>\n\n        <div className=\"get-reset-code\">\n          <button className=\"get-code-btn\">Get Code</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}