{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/user/LoginForm.js\";\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../../contexts/UserContext';\nimport userService from '../../services/userService';\n\nconst LoginForm = () => {\n  const {\n    getUserInfo\n  } = useContext(UserContext);\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState({\n    ref: ''\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError({ ...error,\n      ref: ''\n    });\n    let loginResult;\n\n    if (user.username.trim()) {\n      loginResult = await userService.login('username', user);\n      console.log('loginResult', loginResult);\n    } else if (user.email.trim()) {\n      loginResult = await userService.login('email', user);\n      console.log('loginResult', loginResult);\n    } else if (!user.username.trim()) {\n      return setError({ ...error,\n        ref: 'username'\n      });\n    } else if (!user.email.trim()) {\n      return setError({ ...error,\n        ref: 'email'\n      });\n    }\n\n    if (loginResult.result === 'Success') {\n      localStorage.removeItem('my-reset');\n      localStorage.removeItem('my-user');\n      getUserInfo(loginResult, user);\n    } else if (loginResult.result === 'Username error') {\n      return setError({ ...error,\n        ref: 'username'\n      });\n    } else if (loginResult.result === 'Email error') {\n      return setError({ ...error,\n        ref: 'email'\n      });\n    } else if (loginResult.result === 'Password error') {\n      return setError({ ...error,\n        ref: 'password'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: user.username,\n    required: !user.email.trim(),\n    onChange: handleChange,\n    style: {\n      border: error.ref === 'username' ? '2px solid red' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"or Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: user.email,\n    required: !user.username.trim(),\n    onChange: handleChange,\n    style: {\n      border: error.ref === 'email' ? '2px solid red' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"password-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: user.password,\n    required: true,\n    onChange: handleChange,\n    style: {\n      border: error.ref === 'password' ? '2px solid red' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/user/reset/forgot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Forgot Password?\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/user/LoginForm.js"],"names":["React","useState","useContext","Link","UserContext","userService","LoginForm","getUserInfo","user","setUser","username","email","password","error","setError","ref","handleChange","event","name","value","target","handleSubmit","preventDefault","loginResult","trim","login","console","log","result","localStorage","removeItem","border"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../../contexts/UserContext';\nimport userService from '../../services/userService';\n\nconst LoginForm = () => {\n  const { getUserInfo } = useContext(UserContext);\n\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  const [error, setError] = useState({ ref: '' });\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setUser({\n      ...user,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    setError({\n      ...error,\n      ref: ''\n    });\n\n    let loginResult;\n\n    if (user.username.trim()) {\n      loginResult = await userService.login('username', user);\n      console.log('loginResult', loginResult);\n    } else if (user.email.trim()) {\n      loginResult = await userService.login('email', user);\n      console.log('loginResult', loginResult);\n    } else if (!user.username.trim()) {\n      return setError({\n        ...error,\n        ref: 'username'\n      });\n    } else if (!user.email.trim()) {\n      return setError({\n        ...error,\n        ref: 'email'\n      });\n    }\n\n    if (loginResult.result === 'Success') {\n      localStorage.removeItem('my-reset');\n      localStorage.removeItem('my-user');\n\n      getUserInfo(loginResult, user);\n    } else if (loginResult.result === 'Username error') {\n      return setError({\n        ...error,\n        ref: 'username'\n      });\n    } else if (loginResult.result === 'Email error') {\n      return setError({\n        ...error,\n        ref: 'email'\n      });\n    } else if (loginResult.result === 'Password error') {\n      return setError({\n        ...error,\n        ref: 'password'\n      });\n    }\n  }\n\n  return (\n    <div className=\"login-form-container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"username-login\">\n          <label>Username: </label>\n          <input \n            type=\"text\"\n            name=\"username\"\n            value={user.username}\n            required={!user.email.trim()}\n            onChange={handleChange}\n            style={{\n              border: error.ref === 'username' ? '2px solid red' : 'none'\n            }}\n          />\n        </div>\n\n        <div className=\"email-login\">\n          <label>or Email: </label>\n          <input \n            type=\"text\"\n            name=\"email\"\n            value={user.email}\n            required={!user.username.trim()}\n            onChange={handleChange}\n            style={{\n              border: error.ref === 'email' ? '2px solid red' : 'none'\n            }}\n          />\n        </div>\n\n        <div className=\"password-login\">\n          <label>Password: </label>\n          <input \n            type=\"password\"\n            name=\"password\"\n            value={user.password}\n            required={true}\n            onChange={handleChange}\n            style={{\n              border: error.ref === 'password' ? '2px solid red' : 'none'\n            }}\n          />\n        </div>\n\n        <Link to=\"/user/reset/forgot\">Forgot Password?</Link>\n\n        <button>Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}