{"ast":null,"code":"var getDifficultyMultiplier=function getDifficultyMultiplier(difficulty){if(difficulty==='Medium-Easy'){return 0.25;}else if(difficulty==='Medium'){return 0.5;}else if(difficulty==='Medium-Hard'){return 0.75;}else{return 1;}};var getStreakMultiplier=function getStreakMultiplier(streak){if(streak<7){return 1;}else{return Math.floor(0.0625*Math.pow(3,Math.floor(streak/7)-1));}};exports.getDifficultyFactor=function(difficulty){if(difficulty==='Medium-Easy'){return 1;}else if(difficulty==='Medium'){return 2;}else if(difficulty==='Medium-Hard'){return 3;}else{return 4;}};exports.calcExp=function(multiplier,streak,difficulty,time){var difficultyFactor=getDifficultyMultiplier(difficulty);var fixedTime=time===0?1:time;var streakFactor=getStreakMultiplier(streak);return Math.ceil(difficultyFactor*streakFactor*fixedTime*multiplier);};","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/modules/objective.js"],"names":["getDifficultyMultiplier","difficulty","getStreakMultiplier","streak","Math","floor","exports","getDifficultyFactor","calcExp","multiplier","time","difficultyFactor","fixedTime","streakFactor","ceil"],"mappings":"AAAA,GAAMA,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,UAAU,CAAI,CAC5C,GAAIA,UAAU,GAAK,aAAnB,CAAkC,CAChC,MAAO,KAAP,CACD,CAFD,IAEO,IAAIA,UAAU,GAAK,QAAnB,CAA6B,CAClC,MAAO,IAAP,CACD,CAFM,IAEA,IAAIA,UAAU,GAAK,aAAnB,CAAkC,CACvC,MAAO,KAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CAVD,CAYA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,MAAM,CAAI,CACpC,GAAIA,MAAM,CAAG,CAAb,CAAgB,CACd,MAAO,EAAP,CACD,CAFD,IAEO,CACL,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAW,gBAAS,CAAT,CAAcD,IAAI,CAACC,KAAL,CAAWF,MAAM,CAAG,CAApB,CAAD,CAA2B,CAAxC,CAAX,CAAP,CACD,CACF,CAND,CAQAG,OAAO,CAACC,mBAAR,CAA8B,SAAAN,UAAU,CAAI,CAC1C,GAAIA,UAAU,GAAK,aAAnB,CAAkC,CAChC,MAAO,EAAP,CACD,CAFD,IAEO,IAAIA,UAAU,GAAK,QAAnB,CAA6B,CAClC,MAAO,EAAP,CACD,CAFM,IAEA,IAAIA,UAAU,GAAK,aAAnB,CAAkC,CACvC,MAAO,EAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CAVD,CAYAK,OAAO,CAACE,OAAR,CAAkB,SAACC,UAAD,CAAaN,MAAb,CAAqBF,UAArB,CAAiCS,IAAjC,CAA0C,CAC1D,GAAMC,CAAAA,gBAAgB,CAAGX,uBAAuB,CAACC,UAAD,CAAhD,CACA,GAAMW,CAAAA,SAAS,CAAIF,IAAI,GAAK,CAAV,CAAe,CAAf,CAAmBA,IAArC,CACA,GAAMG,CAAAA,YAAY,CAAGX,mBAAmB,CAACC,MAAD,CAAxC,CAEA,MAAOC,CAAAA,IAAI,CAACU,IAAL,CAAUH,gBAAgB,CAAGE,YAAnB,CAAkCD,SAAlC,CAA8CH,UAAxD,CAAP,CACD,CAND","sourcesContent":["const getDifficultyMultiplier = difficulty => {\n  if (difficulty === 'Medium-Easy') {\n    return 0.25\n  } else if (difficulty === 'Medium') {\n    return 0.5\n  } else if (difficulty === 'Medium-Hard') {\n    return 0.75\n  } else {\n    return 1\n  }\n}\n\nconst getStreakMultiplier = streak => {\n  if (streak < 7) {\n    return 1;\n  } else {\n    return Math.floor(0.0625 * 3**((Math.floor(streak / 7)) - 1))\n  }\n}\n\nexports.getDifficultyFactor = difficulty => {\n  if (difficulty === 'Medium-Easy') {\n    return 1\n  } else if (difficulty === 'Medium') {\n    return 2\n  } else if (difficulty === 'Medium-Hard') {\n    return 3\n  } else {\n    return 4\n  }\n}\n\nexports.calcExp = (multiplier, streak, difficulty, time) => {\n  const difficultyFactor = getDifficultyMultiplier(difficulty);\n  const fixedTime = (time === 0) ? 1 : time;\n  const streakFactor = getStreakMultiplier(streak);\n\n  return Math.ceil(difficultyFactor * streakFactor * fixedTime * multiplier);\n}\n"]},"metadata":{},"sourceType":"module"}