{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/dashboard/user'; // CREATE user\n\nconst createUser = userObject => {\n  const req = axios.post(`${baseUrl}/create`, userObject);\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // LOGIN\n\n\nconst login = credentials => {\n  const req = axios.post(`${baseUrl}/login`, credentials);\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // GET all users\n\n\nconst getAll = () => {\n  const req = axios.get('/dashboard/users');\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // READ user\n\n\nconst readUser = (userId, token) => {\n  const req = axios.get(`${baseUrl}/${userId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // UPDATE user\n\n\nconst updateUser = (userId, userObject, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/update`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data).catch(err => console.error(err));\n}; // DELETE user\n\n\nconst deleteUser = (userId, userObject, token) => {\n  const req = axios.delete(`${baseUrl}/${userId}/delete`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data).catch(err => console.error(err));\n};\n\nexport default {\n  getAll,\n  createUser,\n  login,\n  readUser,\n  updateUser,\n  deleteUser\n};","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/services/userService.js"],"names":["axios","baseUrl","createUser","userObject","req","post","then","res","data","catch","err","console","error","login","credentials","getAll","get","readUser","userId","token","headers","updateUser","put","deleteUser","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,iBAAhB,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,UAAD,IAAgB;AACjC,QAAMC,GAAG,GAAGJ,KAAK,CAACK,IAAN,CAAY,GAAEJ,OAAQ,SAAtB,EAAgCE,UAAhC,CAAZ;AACA,SAAOC,GAAG,CAACE,IAAJ,CAASC,GAAG,IAAIA,GAAG,CAACC,IAApB,EACJC,KADI,CACEC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CADT,CAAP;AAED,CAJD,C,CAMA;;;AACA,MAAMG,KAAK,GAAIC,WAAD,IAAiB;AAC7B,QAAMV,GAAG,GAAGJ,KAAK,CAACK,IAAN,CAAY,GAAEJ,OAAQ,QAAtB,EAA+Ba,WAA/B,CAAZ;AACA,SAAOV,GAAG,CAACE,IAAJ,CAASC,GAAG,IAAIA,GAAG,CAACC,IAApB,EACJC,KADI,CACEC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CADT,CAAP;AAED,CAJD,C,CAMA;;;AACA,MAAMK,MAAM,GAAG,MAAM;AACnB,QAAMX,GAAG,GAAGJ,KAAK,CAACgB,GAAN,CAAU,kBAAV,CAAZ;AACA,SAAOZ,GAAG,CAACE,IAAJ,CAASC,GAAG,IAAIA,GAAG,CAACC,IAApB,EACJC,KADI,CACEC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CADT,CAAP;AAED,CAJD,C,CAMA;;;AACA,MAAMO,QAAQ,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClC,QAAMf,GAAG,GAAGJ,KAAK,CAACgB,GAAN,CAAW,GAAEf,OAAQ,IAAGiB,MAAO,EAA/B,EAAkC;AAC5CE,IAAAA,OAAO,EAAE;AACP,uBAAkB,UAASD,KAAM;AAD1B;AADmC,GAAlC,CAAZ;AAKA,SAAOf,GAAG,CAACE,IAAJ,CAASC,GAAG,IAAIA,GAAG,CAACC,IAApB,EACJC,KADI,CACEC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CADT,CAAP;AAED,CARD,C,CAUA;;;AACA,MAAMW,UAAU,GAAG,CAACH,MAAD,EAASf,UAAT,EAAqBgB,KAArB,KAA+B;AAChD,QAAMf,GAAG,GAAGJ,KAAK,CAACsB,GAAN,CAAW,GAAErB,OAAQ,IAAGiB,MAAO,SAA/B,EAAyCf,UAAzC,EAAqD;AAC/DiB,IAAAA,OAAO,EAAE;AACP,uBAAkB,UAASD,KAAM;AAD1B;AADsD,GAArD,CAAZ;AAKA,SAAOf,GAAG,CAACE,IAAJ,CAASC,GAAG,IAAIA,GAAG,CAACC,IAApB,EACJC,KADI,CACEC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CADT,CAAP;AAED,CARD,C,CAUA;;;AACA,MAAMa,UAAU,GAAG,CAACL,MAAD,EAASf,UAAT,EAAqBgB,KAArB,KAA+B;AAChD,QAAMf,GAAG,GAAGJ,KAAK,CAACwB,MAAN,CAAc,GAAEvB,OAAQ,IAAGiB,MAAO,SAAlC,EAA4Cf,UAA5C,EAAwD;AAClEiB,IAAAA,OAAO,EAAE;AACP,uBAAkB,UAASD,KAAM;AAD1B;AADyD,GAAxD,CAAZ;AAKA,SAAOf,GAAG,CAACE,IAAJ,CAASC,GAAG,IAAIA,GAAG,CAACC,IAApB,EACJC,KADI,CACEC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CADT,CAAP;AAED,CARD;;AAUA,eAAe;AAAEK,EAAAA,MAAF;AAAUb,EAAAA,UAAV;AAAsBW,EAAAA,KAAtB;AAA6BI,EAAAA,QAA7B;AAAuCI,EAAAA,UAAvC;AAAmDE,EAAAA;AAAnD,CAAf","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/dashboard/user';\n\n// CREATE user\nconst createUser = (userObject) => {\n  const req = axios.post(`${baseUrl}/create`, userObject);\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\n// LOGIN\nconst login = (credentials) => {\n  const req = axios.post(`${baseUrl}/login`, credentials);\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n}\n\n// GET all users\nconst getAll = () => {\n  const req = axios.get('/dashboard/users');\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\n// READ user\nconst readUser = (userId, token) => {\n  const req = axios.get(`${baseUrl}/${userId}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\n// UPDATE user\nconst updateUser = (userId, userObject, token) => {\n  const req = axios.put(`${baseUrl}/${userId}/update`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\n// DELETE user\nconst deleteUser = (userId, userObject, token) => {\n  const req = axios.delete(`${baseUrl}/${userId}/delete`, userObject, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return req.then(res => res.data)\n    .catch(err => console.error(err));\n};\n\nexport default { getAll, createUser, login, readUser, updateUser, deleteUser };\n"]},"metadata":{},"sourceType":"module"}