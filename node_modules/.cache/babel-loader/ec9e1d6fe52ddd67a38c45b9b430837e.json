{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\n\nconst creatureReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_CREATURE':\n      return [...state, {\n        creature: action.creature.creature,\n        creatureName: action.creature.creatureName,\n        purpose: action.creature.purpose,\n        purposeName: action.creature.purposeName,\n        id: uuidv4(),\n        sprite: `./sprites/pkmnXY/${action.creature.creature.toLowerCase()}.gif`,\n        level: 1,\n        exp: 0,\n        expGoal: 1,\n        prevGoal: 0,\n        expSurplus: 0,\n        difficulty: action.creature.difficulty,\n        multiplier: action.creature.multiplier,\n        objectives: [],\n        birthdate: action.creature.birthdate,\n        birthTime: action.creature.birthTime,\n        age: 0,\n        isNoob: true,\n        evolutionaryLine: [...action.creature.evolutionaryLine],\n        pokeballNumber: action.creature.pokeballNumber,\n        streak: {\n          count: 0,\n          timestamp: Date.now(),\n          day: new Date().getDay()\n        }\n      }];\n\n    case 'RESET_BAR':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            prevGoal: action.creature.prevGoal,\n            expSurplus: action.creature.surplus\n          };\n        }\n\n        return creature;\n      });\n\n    case 'UPDATE_AGE':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            age: action.creature.newAge\n          };\n        }\n\n        return creature;\n      });\n\n    case 'ADD_EXP':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            exp: action.creature.newTotal,\n            expSurplus: action.creature.newSurplus\n          };\n        }\n\n        return creature;\n      });\n\n    case 'RESET_STREAK':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            streak: action.creature.newStreak\n          };\n        }\n\n        return creature;\n      });\n\n    case 'UPDATE_STREAK':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            streak: action.creature.newStreak\n          };\n        }\n\n        return creature;\n      });\n\n    case 'LEVEL_UP':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            level: action.creature.level\n          };\n        }\n\n        return creature;\n      });\n\n    case 'UPGRADE_MULTIPLIERS':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            difficulty: action.creature.difficulty,\n            multiplier: action.creature.multiplier\n          };\n        }\n\n        return creature;\n      });\n\n    case 'LEVEL_UPDATES':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            prevGoal: action.creature.prevGoal,\n            expGoal: action.creature.newGoal,\n            isNoob: false\n          };\n        }\n\n        return creature;\n      });\n\n    case 'UPDATE_POKEBALL':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            pokeballNumber: action.creature.newPokeball\n          };\n        }\n\n        return creature;\n      });\n\n    case 'EVOLVE':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            creature: action.creature.nextCreature,\n            sprite: `../sprites/pkmnXY/${action.creature.nextCreature}.gif`\n          };\n        }\n\n        return creature;\n      });\n\n    case 'TOGGLE_OBJECTIVES_DISPLAY':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return { ...creature,\n            objectivesDisplayed: !creature.objectivesDisplayed\n          };\n        }\n\n        return creature;\n      });\n\n    case 'ADD_OBJECTIVE':\n      return state.map(creature => {\n        if (creature.id === action.creatureId) {\n          return { ...creature,\n            objectives: [...creature.objectives, action.objective]\n          };\n        }\n\n        return creature;\n      });\n\n    case 'DELETE_OBJECTIVE':\n      return state.map(creature => {\n        if (creature.id === action.creatureId) {\n          const objectiveArr = creature.objectives.filter(item => item.id !== action.item);\n          return { ...creature,\n            objectives: objectiveArr\n          };\n        }\n\n        return creature;\n      });\n\n    case 'DELETE_CREATURE':\n      return state.filter(creature => creature.id !== action.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default creatureReducer;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/reducers/creatureReducer.js"],"names":["v4","uuidv4","creatureReducer","state","action","type","creature","creatureName","purpose","purposeName","id","sprite","toLowerCase","level","exp","expGoal","prevGoal","expSurplus","difficulty","multiplier","objectives","birthdate","birthTime","age","isNoob","evolutionaryLine","pokeballNumber","streak","count","timestamp","Date","now","day","getDay","map","surplus","newAge","newTotal","newSurplus","newStreak","newGoal","newPokeball","nextCreature","objectivesDisplayed","creatureId","objective","objectiveArr","filter","item"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,cAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAW;AAChBG,QAAAA,QAAQ,EAAEF,MAAM,CAACE,QAAP,CAAgBA,QADV;AAEhBC,QAAAA,YAAY,EAAEH,MAAM,CAACE,QAAP,CAAgBC,YAFd;AAGhBC,QAAAA,OAAO,EAAEJ,MAAM,CAACE,QAAP,CAAgBE,OAHT;AAIhBC,QAAAA,WAAW,EAAEL,MAAM,CAACE,QAAP,CAAgBG,WAJb;AAKhBC,QAAAA,EAAE,EAAET,MAAM,EALM;AAMhBU,QAAAA,MAAM,EAAG,oBAAmBP,MAAM,CAACE,QAAP,CAAgBA,QAAhB,CAAyBM,WAAzB,EAAuC,MANnD;AAOhBC,QAAAA,KAAK,EAAE,CAPS;AAQhBC,QAAAA,GAAG,EAAE,CARW;AAShBC,QAAAA,OAAO,EAAE,CATO;AAUhBC,QAAAA,QAAQ,EAAE,CAVM;AAWhBC,QAAAA,UAAU,EAAE,CAXI;AAYhBC,QAAAA,UAAU,EAAEd,MAAM,CAACE,QAAP,CAAgBY,UAZZ;AAahBC,QAAAA,UAAU,EAAEf,MAAM,CAACE,QAAP,CAAgBa,UAbZ;AAchBC,QAAAA,UAAU,EAAE,EAdI;AAehBC,QAAAA,SAAS,EAAEjB,MAAM,CAACE,QAAP,CAAgBe,SAfX;AAgBhBC,QAAAA,SAAS,EAAElB,MAAM,CAACE,QAAP,CAAgBgB,SAhBX;AAiBhBC,QAAAA,GAAG,EAAE,CAjBW;AAkBhBC,QAAAA,MAAM,EAAE,IAlBQ;AAmBhBC,QAAAA,gBAAgB,EAAE,CAAC,GAAGrB,MAAM,CAACE,QAAP,CAAgBmB,gBAApB,CAnBF;AAoBhBC,QAAAA,cAAc,EAAEtB,MAAM,CAACE,QAAP,CAAgBoB,cApBhB;AAqBhBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CADD;AAENC,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFL;AAGNC,UAAAA,GAAG,EAAG,IAAIF,IAAJ,EAAD,CAAaG,MAAb;AAHC;AArBQ,OAAX,CAAP;;AA2BF,SAAK,WAAL;AACE,aAAO9B,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELU,YAAAA,QAAQ,EAAEZ,MAAM,CAACE,QAAP,CAAgBU,QAFrB;AAGLC,YAAAA,UAAU,EAAEb,MAAM,CAACE,QAAP,CAAgB6B;AAHvB,WAAP;AAKD;;AAED,eAAO7B,QAAP;AACD,OAVM,CAAP;;AAWF,SAAK,YAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELiB,YAAAA,GAAG,EAAEnB,MAAM,CAACE,QAAP,CAAgB8B;AAFhB,WAAP;AAID;;AAED,eAAO9B,QAAP;AACD,OATM,CAAP;;AAUF,SAAK,SAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELQ,YAAAA,GAAG,EAAEV,MAAM,CAACE,QAAP,CAAgB+B,QAFhB;AAGLpB,YAAAA,UAAU,EAAEb,MAAM,CAACE,QAAP,CAAgBgC;AAHvB,WAAP;AAKD;;AAED,eAAOhC,QAAP;AACD,OAVM,CAAP;;AAWF,SAAK,cAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELqB,YAAAA,MAAM,EAAEvB,MAAM,CAACE,QAAP,CAAgBiC;AAFnB,WAAP;AAID;;AAED,eAAOjC,QAAP;AACD,OATM,CAAP;;AAUF,SAAK,eAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELqB,YAAAA,MAAM,EAAEvB,MAAM,CAACE,QAAP,CAAgBiC;AAFnB,WAAP;AAID;;AAED,eAAOjC,QAAP;AACD,OATM,CAAP;;AAUF,SAAK,UAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELO,YAAAA,KAAK,EAAET,MAAM,CAACE,QAAP,CAAgBO;AAFlB,WAAP;AAID;;AAED,eAAOP,QAAP;AACD,OATM,CAAP;;AAUF,SAAK,qBAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELY,YAAAA,UAAU,EAAEd,MAAM,CAACE,QAAP,CAAgBY,UAFvB;AAGLC,YAAAA,UAAU,EAAEf,MAAM,CAACE,QAAP,CAAgBa;AAHvB,WAAP;AAKD;;AAED,eAAOb,QAAP;AACD,OAVM,CAAP;;AAWF,SAAK,eAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELU,YAAAA,QAAQ,EAAEZ,MAAM,CAACE,QAAP,CAAgBU,QAFrB;AAGLD,YAAAA,OAAO,EAAEX,MAAM,CAACE,QAAP,CAAgBkC,OAHpB;AAILhB,YAAAA,MAAM,EAAE;AAJH,WAAP;AAMD;;AAED,eAAOlB,QAAP;AACD,OAXM,CAAP;;AAYF,SAAK,iBAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELoB,YAAAA,cAAc,EAAEtB,MAAM,CAACE,QAAP,CAAgBmC;AAF3B,WAAP;AAID;;AAED,eAAOnC,QAAP;AACD,OATM,CAAP;;AAUF,SAAK,QAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELA,YAAAA,QAAQ,EAAEF,MAAM,CAACE,QAAP,CAAgBoC,YAFrB;AAGL/B,YAAAA,MAAM,EAAG,qBAAoBP,MAAM,CAACE,QAAP,CAAgBoC,YAAa;AAHrD,WAAP;AAKD;;AAED,eAAOpC,QAAP;AACD,OAVM,CAAP;;AAWF,SAAK,2BAAL;AACE,aAAQH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC5B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACE,QAAP,CAAgBI,EAApC,EAAwC;AACtC,iBAAO,EACL,GAAGJ,QADE;AAELqC,YAAAA,mBAAmB,EAAE,CAACrC,QAAQ,CAACqC;AAF1B,WAAP;AAID;;AAED,eAAOrC,QAAP;AACD,OATO,CAAR;;AAUF,SAAK,eAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACwC,UAA3B,EAAuC;AACrC,iBAAO,EACL,GAAGtC,QADE;AAELc,YAAAA,UAAU,EAAE,CACV,GAAGd,QAAQ,CAACc,UADF,EAEVhB,MAAM,CAACyC,SAFG;AAFP,WAAP;AAOD;;AAED,eAAOvC,QAAP;AACD,OAZM,CAAP;;AAaF,SAAK,kBAAL;AACE,aAAOH,KAAK,CAAC+B,GAAN,CAAU5B,QAAQ,IAAI;AAC3B,YAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACwC,UAA3B,EAAuC;AACrC,gBAAME,YAAY,GAAGxC,QAAQ,CAACc,UAAT,CAAoB2B,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACtC,EAAL,KAAYN,MAAM,CAAC4C,IAAtD,CAArB;AAEA,iBAAO,EACL,GAAG1C,QADE;AAELc,YAAAA,UAAU,EAAE0B;AAFP,WAAP;AAID;;AAED,eAAOxC,QAAP;AACD,OAXM,CAAP;;AAYF,SAAK,iBAAL;AACE,aAAOH,KAAK,CAAC4C,MAAN,CAAazC,QAAQ,IAAIA,QAAQ,CAACI,EAAT,KAAgBN,MAAM,CAACM,EAAhD,CAAP;;AACF;AACE,aAAOP,KAAP;AA1LJ;AA4LD,CA7LD;;AA+LA,eAAeD,eAAf","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst creatureReducer = (state, action) => {\n  switch(action.type) {\n    case 'ADD_CREATURE':\n      return [...state, {\n        creature: action.creature.creature,\n        creatureName: action.creature.creatureName,\n        purpose: action.creature.purpose,\n        purposeName: action.creature.purposeName,\n        id: uuidv4(),\n        sprite: `./sprites/pkmnXY/${action.creature.creature.toLowerCase()}.gif`,\n        level: 1,\n        exp: 0,\n        expGoal: 1,\n        prevGoal: 0,\n        expSurplus: 0,\n        difficulty: action.creature.difficulty,\n        multiplier: action.creature.multiplier,\n        objectives: [],\n        birthdate: action.creature.birthdate,\n        birthTime: action.creature.birthTime,\n        age: 0,\n        isNoob: true,\n        evolutionaryLine: [...action.creature.evolutionaryLine],\n        pokeballNumber: action.creature.pokeballNumber,\n        streak: {\n          count: 0,\n          timestamp: Date.now(),\n          day: (new Date()).getDay()\n        }\n      }];\n    case 'RESET_BAR':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            prevGoal: action.creature.prevGoal,\n            expSurplus: action.creature.surplus,\n          }\n        }\n\n        return creature;\n      });\n    case 'UPDATE_AGE':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            age: action.creature.newAge\n          }\n        }\n\n        return creature;\n      });\n    case 'ADD_EXP':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            exp: action.creature.newTotal,\n            expSurplus: action.creature.newSurplus,\n          }\n        }\n\n        return creature;\n      });\n    case 'RESET_STREAK':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            streak: action.creature.newStreak\n          }\n        }\n\n        return creature;\n      });\n    case 'UPDATE_STREAK':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            streak: action.creature.newStreak\n          }\n        }\n\n        return creature;\n      });\n    case 'LEVEL_UP':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            level: action.creature.level,\n          }\n        }\n\n        return creature;\n      });\n    case 'UPGRADE_MULTIPLIERS':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            difficulty: action.creature.difficulty,\n            multiplier: action.creature.multiplier\n          }\n        }\n\n        return creature;\n      });\n    case 'LEVEL_UPDATES':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            prevGoal: action.creature.prevGoal,\n            expGoal: action.creature.newGoal,\n            isNoob: false,\n          }\n        }\n\n        return creature;\n      });\n    case 'UPDATE_POKEBALL':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            pokeballNumber: action.creature.newPokeball\n          }\n        }\n\n        return creature;\n      });\n    case 'EVOLVE':\n      return state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            creature: action.creature.nextCreature,\n            sprite: `../sprites/pkmnXY/${action.creature.nextCreature}.gif`,\n          }\n        }\n\n        return creature;\n      });\n    case 'TOGGLE_OBJECTIVES_DISPLAY':\n      return (state.map(creature => {\n        if (creature.id === action.creature.id) {\n          return {\n            ...creature,\n            objectivesDisplayed: !creature.objectivesDisplayed\n          }\n        }\n\n        return creature;\n      }));\n    case 'ADD_OBJECTIVE': \n      return state.map(creature => {\n        if (creature.id === action.creatureId) {\n          return {\n            ...creature,\n            objectives: [\n              ...creature.objectives,\n              action.objective\n            ]\n          }\n        }\n\n        return creature;\n      })\n    case 'DELETE_OBJECTIVE':\n      return state.map(creature => {\n        if (creature.id === action.creatureId) {\n          const objectiveArr = creature.objectives.filter(item => item.id !== action.item);\n\n          return {\n            ...creature,\n            objectives: objectiveArr\n          }\n        }\n\n        return creature;\n      })\n    case 'DELETE_CREATURE':\n      return state.filter(creature => creature.id !== action.id);\n    default:\n      return state;\n  }\n}\n\nexport default creatureReducer;\n"]},"metadata":{},"sourceType":"module"}