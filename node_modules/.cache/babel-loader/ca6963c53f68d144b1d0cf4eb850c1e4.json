{"ast":null,"code":"import _toConsumableArray from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as streak from'../modules/streak';import*as ages from'../modules/age';var userReducer=function userReducer(state,action){switch(action.type){case'LOG_IN':return _objectSpread(_objectSpread({},state),{},{accessToken:action.user.accessToken,db_id:action.user.db_id,username:action.user.username,email:action.user.email,password:action.user.password,db_password:action.user.db_password,creatures:action.user.creatures.map(function(creature){var streakDay=creature.streak_day;var streakTime=creature.streak_timestamp;var streakCount=creature.streak_count;var birthTime=creature.birth_time;var thisDay=new Date().getDay();return _objectSpread(_objectSpread({},creature),{},{streak_count:streak.checkCreatureStreak(thisDay,streakTime,streakDay)==='broken'?0:streakCount,age:ages.getAge(birthTime)});}),new_day:action.user.newDay,new_time:action.user.newTime,updated:false});case'POST_LOCAL_CREATURES':return _objectSpread(_objectSpread({},state),{},{creatures:action.creatures.creatures});case'UPDATE_CREATURES':return _objectSpread(_objectSpread({},state),{},{creatures:action.creatures.creatures});case'REFRESH_USER':return _objectSpread(_objectSpread({},state),{},{creatures:action.user.creatures,refreshed:true});case'UPDATE_USER':return _objectSpread(_objectSpread({},state),{},{username:action.user.username,email:action.user.email,password:action.user.password});case'AUTO_UPDATE':return _objectSpread(_objectSpread({},state),{},{updated:true});case'ADD_CREATURE':return _objectSpread(_objectSpread({},state),{},{creatures:[].concat(_toConsumableArray(state.creatures),[{creature:action.creature.creature,creature_name:action.creature.creature_name,purpose:action.creature.purpose,purpose_name:action.creature.purpose_name,evolutions:action.creature.evolutions,difficulty:action.creature.difficulty,multiplier:action.creature.multiplier,birth_date:action.creature.birth_date,birth_time:action.creature.birth_time,pokeball_number:action.creature.pokeball_number,id:action.creature.id,level:1,exp:0,exp_goal:1,prev_exp_goal:0,exp_surplus:0,objectives:[],age:0,is_noob:true,streak_count:0,streak_timestamp:Date.now(),streak_day:action.creature.streak_day}])});case'UPDATE_CREATURE_INFO':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creature.id){return _objectSpread(_objectSpread({},creature),{},{creature:action.creature.current,evolutions:action.creature.newEvos,creature_name:action.creature.name});}return creature;})});case'ADD_OBJECTIVE':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.id){return _objectSpread(_objectSpread({},creature),{},{objectives:[].concat(_toConsumableArray(creature.objectives),[{id:action.objective.id,text:action.objective.text,is_timed:action.objective.is_timed,difficulty:action.objective.difficulty,factor:action.objective.factor}])});}return creature;})});case'DELETE_OBJECTIVE':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creatureId){return _objectSpread(_objectSpread({},creature),{},{objectives:creature.objectives.filter(function(obj){return obj.id!==action.objectiveId;})});}return creature;})});case'ADD_EXP':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creature.id){return _objectSpread(_objectSpread({},creature),{},{exp:action.creature.newTotal,exp_surplus:action.creature.newSurplus});}return creature;})});case'UPDATE_STREAK':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creature.id){return _objectSpread(_objectSpread({},creature),{},{streak_count:action.creature.newCount,streak_timestamp:Date.now(),streak_day:action.creature.newDay});}return creature;})});case'LEVEL_UP':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creature.id){return _objectSpread(_objectSpread({},creature),{},{level:action.creature.level,is_noob:false});}return creature;})});case'UPGRADE_MULTIPLIERS':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creature.id){return _objectSpread(_objectSpread({},creature),{},{difficulty:action.creature.difficulty,multiplier:action.creature.multiplier});}return creature;})});case'LEVEL_UPDATES':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creature.id){return _objectSpread(_objectSpread({},creature),{},{prev_exp_goal:action.creature.prevGoal,exp_goal:action.creature.newGoal});}return creature;})});case'UPDATE_POKEBALL':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creature.id){return _objectSpread(_objectSpread({},creature),{},{pokeball_number:action.creature.newPokeball});}return creature;})});case'EVOLVE':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.map(function(creature){if(creature.id===action.creature.id){return _objectSpread(_objectSpread({},creature),{},{creature:action.creature.nextCreature});}return creature;})});case'DELETE_CREATURE':return _objectSpread(_objectSpread({},state),{},{creatures:state.creatures.filter(function(creature){return creature.id!==action.id;})});case'LOG_OUT':return _objectSpread(_objectSpread({},state),{},{accessToken:null,db_id:null,username:null,email:null,password:null,db_password:null,creatures:[],new_day:0,new_time:0,refreshed:false,updated:false});default:return state;}};export default userReducer;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/reducers/userReducer.js"],"names":["streak","ages","userReducer","state","action","type","accessToken","user","db_id","username","email","password","db_password","creatures","map","creature","streakDay","streak_day","streakTime","streak_timestamp","streakCount","streak_count","birthTime","birth_time","thisDay","Date","getDay","checkCreatureStreak","age","getAge","new_day","newDay","new_time","newTime","updated","refreshed","creature_name","purpose","purpose_name","evolutions","difficulty","multiplier","birth_date","pokeball_number","id","level","exp","exp_goal","prev_exp_goal","exp_surplus","objectives","is_noob","now","current","newEvos","name","objective","text","is_timed","factor","creatureId","filter","obj","objectiveId","newTotal","newSurplus","newCount","prevGoal","newGoal","newPokeball","nextCreature"],"mappings":"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","sourcesContent":["import * as streak from '../modules/streak';\nimport * as ages from '../modules/age';\n\nconst userReducer = (state, action) => {\n  switch(action.type) {\n    case 'LOG_IN':\n      return {\n        ...state,\n        accessToken: action.user.accessToken,\n        db_id: action.user.db_id,\n        username: action.user.username,\n        email: action.user.email,\n        password: action.user.password,\n        db_password: action.user.db_password,\n        creatures: action.user.creatures.map(creature => {\n          const streakDay = creature.streak_day;\n          const streakTime = creature.streak_timestamp;\n          const streakCount = creature.streak_count;\n          const birthTime = creature.birth_time;\n          const thisDay = (new Date()).getDay();\n\n          return {\n            ...creature,\n            streak_count: streak.checkCreatureStreak(thisDay, streakTime, streakDay) === 'broken'\n              ? 0 : streakCount,\n            age: ages.getAge(birthTime)\n          }\n        }),\n        new_day: action.user.newDay,\n        new_time: action.user.newTime,\n        updated: false,\n      };\n    case 'POST_LOCAL_CREATURES':\n      return {\n        ...state,\n        creatures: action.creatures.creatures\n      };\n    case 'UPDATE_CREATURES':\n      return {\n        ...state,\n        creatures: action.creatures.creatures\n      };\n    case 'REFRESH_USER':\n      return {\n        ...state,\n        creatures: action.user.creatures,\n        refreshed: true\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        username: action.user.username,\n        email: action.user.email,\n        password: action.user.password\n      };\n    case 'AUTO_UPDATE':\n      return {\n        ...state,\n        updated: true\n      };\n    case 'ADD_CREATURE':\n      return {\n        ...state,\n        creatures: [\n          ...state.creatures,\n          {\n            creature: action.creature.creature,\n            creature_name: action.creature.creature_name,\n            purpose: action.creature.purpose,\n            purpose_name: action.creature.purpose_name,\n            evolutions: action.creature.evolutions,\n            difficulty: action.creature.difficulty,\n            multiplier: action.creature.multiplier,\n            birth_date: action.creature.birth_date,\n            birth_time: action.creature.birth_time,\n            pokeball_number: action.creature.pokeball_number,\n            id: action.creature.id,\n            level: 1,\n            exp: 0,\n            exp_goal: 1,\n            prev_exp_goal: 0,\n            exp_surplus: 0,\n            objectives: [],\n            age: 0,\n            is_noob: true,\n            streak_count: 0,\n            streak_timestamp: Date.now(),\n            streak_day: action.creature.streak_day\n          }\n        ]\n      };\n    case 'UPDATE_CREATURE_INFO':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              creature: action.creature.current,\n              evolutions: action.creature.newEvos,\n              creature_name: action.creature.name\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'ADD_OBJECTIVE':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.id) {\n            return {\n              ...creature,\n              objectives: [\n                ...creature.objectives,\n                {\n                  id: action.objective.id,\n                  text: action.objective.text,\n                  is_timed: action.objective.is_timed,\n                  difficulty: action.objective.difficulty,\n                  factor: action.objective.factor\n                },\n              ],\n            };\n          }\n\n          return creature;\n        })\n      };\n    case 'DELETE_OBJECTIVE':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creatureId) {\n            return {\n              ...creature,\n              objectives: creature.objectives.filter(obj => obj.id !== action.objectiveId)\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'ADD_EXP':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              exp: action.creature.newTotal,\n              exp_surplus: action.creature.newSurplus\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'UPDATE_STREAK':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              streak_count: action.creature.newCount,\n              streak_timestamp: Date.now(),\n              streak_day: action.creature.newDay,\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'LEVEL_UP':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              level: action.creature.level,\n              is_noob: false\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'UPGRADE_MULTIPLIERS':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              difficulty: action.creature.difficulty,\n              multiplier: action.creature.multiplier,\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'LEVEL_UPDATES':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              prev_exp_goal: action.creature.prevGoal,\n              exp_goal: action.creature.newGoal,\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'UPDATE_POKEBALL':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              pokeball_number: action.creature.newPokeball,\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'EVOLVE':\n      return {\n        ...state,\n        creatures: state.creatures.map(creature => {\n          if (creature.id === action.creature.id) {\n            return {\n              ...creature,\n              creature: action.creature.nextCreature,\n            }\n          }\n\n          return creature;\n        })\n      };\n    case 'DELETE_CREATURE':\n      return {\n        ...state,\n        creatures: state.creatures.filter(creature => creature.id !== action.id)\n      };\n    case 'LOG_OUT':\n      return {\n        ...state,\n        accessToken: null,\n        db_id: null,\n        username: null,\n        email: null,\n        password: null,\n        db_password: null,\n        creatures: [],\n        new_day: 0,\n        new_time: 0,\n        refreshed: false,\n        updated: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}