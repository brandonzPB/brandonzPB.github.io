{"ast":null,"code":"var _jsxFileName = \"/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/creature/Creature.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { CreatureContext } from '../../contexts/CreatureContext';\nimport { UserContext } from '../../contexts/UserContext';\nimport * as stats from '../../modules/stats';\nimport CreatureDisplay from './CreatureDisplay';\nimport './creature.css';\nimport * as age from '../../modules/age';\n\nconst lvlUpMusicSrc = require('../../sounds/level-up.mp3');\n\nconst levelUpSound = new Audio(lvlUpMusicSrc);\n\nconst evolveMusicSrc = require('../../sounds/evolve.mp3');\n\nconst evolveSound = new Audio(evolveMusicSrc);\n\nconst Creature = ({\n  creature\n}) => {\n  const {\n    displayObjectives,\n    sendCreatureId,\n    expUpdate,\n    toggleExpUpdate\n  } = useContext(CreatureContext);\n  const {\n    user,\n    userDispatch\n  } = useContext(UserContext);\n  const [levelUpdate, setLevelUpdate] = useState(false);\n  const [evolve, setEvolve] = useState(false);\n  const pokeball = !creature.pokeballNumber ? 13 : creature.pokeballNumber < 14 ? 13 // pokeball\n  : creature.pokeballNumber === 14 ? 1 // greatball\n  : creature.pokeballNumber === 15 ? 0 : 11; // ultraball : masterball\n\n  const img = require(`../../images/pokeballs/${pokeball}.png`);\n\n  const toggleLevelUpdate = () => {\n    setLevelUpdate(!levelUpdate);\n  };\n\n  const toggleEvolve = () => {\n    setEvolve(!evolve);\n  }; /// STREAK METHODS ///\n\n\n  const checkCreatureStreak = () => {\n    // checks if streak is broken ('broken', 'constant', or 'increment')\n    const streakTimestamp = creature.streak_timestamp;\n    const streakDay = creature.streak_day;\n    const thisDay = new Date().getDay();\n\n    if (streakDay === 6) {\n      // Streak continues if current week day is 0 and less than 24 hours passed\n      if (thisDay !== 0 && thisDay !== 6) {\n        // Streak broken\n        return 'broken';\n      } else if (thisDay === 0) {\n        // Next week day\n        // if more than 2 days passed; streak is over\n        // else, increment streak count\n        const minDifference = age.getAge(streakTimestamp, false);\n        return minDifference > 2880 ? 'broken' : 'increment';\n      } else {\n        // Same day\n        return 'constant';\n      }\n    } else {\n      // Streak continues if current week day is streak.timestamp + 1, and if less than 24 hours passed\n      if (thisDay === streakDay + 1) {\n        // if more than 2 days passed; streak is over\n        // else, increment streak count\n        const minDifference = age.getAge(streakTimestamp, false);\n        return minDifference > 2880 ? 'broken' : 'increment';\n      } else if (streakDay === thisDay) {\n        // Same day\n        return 'constant';\n      } else {\n        return 'broken';\n      }\n    }\n  };\n\n  const updateCreatureStreak = () => {\n    const newCount = creature.streak_count + 1;\n    const newTimestamp = Date.now();\n    const newDay = new Date().getDay();\n    userDispatch({\n      type: 'UPDATE_STREAK',\n      creature: {\n        id: creature.id,\n        newCount,\n        newTimestamp,\n        newDay\n      }\n    });\n    return creature;\n  };\n\n  const resetCreatureStreak = () => {\n    const newCount = 0;\n    const newTimestamp = Date.now();\n    const newDay = new Date().getDay();\n    userDispatch({\n      type: 'UPDATE_STREAK',\n      creature: {\n        id: creature.id,\n        newCount,\n        newTimestamp,\n        newDay\n      }\n    });\n    return creature;\n  }; /// AUTO-UPDATE HOOKS ///\n  // Updates age, streak, exp, and level\n\n\n  useEffect(() => {\n    const birthTime = creature.birth_time;\n    const newAge = age.getAge(birthTime);\n    userDispatch({\n      type: 'UPDATE_AGE',\n      creature: {\n        newAge,\n        id: creature.id\n      }\n    });\n    const streak = checkCreatureStreak();\n    if (streak === 'broken') resetCreatureStreak();\n    if (!expUpdate) return;\n    if (streak === 'increment' || creature.streak.count === 0) updateCreatureStreak();\n\n    if (creature.exp >= creature.exp_goal || creature.is_noob) {\n      levelUpSound.currentTime = 1;\n      levelUpSound.play();\n      const newLevel = creature.level + 1;\n      userDispatch({\n        type: 'LEVEL_UP',\n        creature: {\n          id: creature.id,\n          level: newLevel\n        }\n      });\n      return toggleLevelUpdate();\n    }\n\n    toggleExpUpdate();\n  }, [creature.exp]); // Updates creature multipliers\n\n  useEffect(() => {\n    if (!levelUpdate) return;\n    const timer = setTimeout(() => {\n      const difficulty = stats.getCreatureDifficulty(creature.purpose, creature.level);\n      const multiplier = stats.getExpMultiplier(creature.level);\n      userDispatch({\n        type: 'UPGRADE_MULTIPLIERS',\n        creature: {\n          id: creature.id,\n          difficulty,\n          multiplier\n        }\n      });\n      const prevGoal = creature.is_noob ? 1 : creature.exp_goal;\n      const newGoal = creature.is_noob ? 9 : stats.getExpGoal(creature.level, difficulty);\n      userDispatch({\n        type: 'LEVEL_UPDATES',\n        creature: {\n          id: creature.id,\n          prevGoal,\n          newGoal\n        }\n      });\n      toggleExpUpdate();\n      toggleLevelUpdate();\n\n      if (creature.level === 15 || creature.level === 30 || creature.level === 50 || creature.level == 80) {\n        const newPokeball = creature.level === 30 ? 14 : creature.level === 50 ? 15 : creature.level === 80 ? 16 : creature.pokeball_number;\n        userDispatch({\n          type: 'UPDATE_POKEBALL',\n          creature: {\n            id: creature.id,\n            newPokeball\n          }\n        });\n        return toggleEvolve();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [levelUpdate]); // Evolves creature\n\n  useEffect(() => {\n    if (!evolve) return;\n    const nextCreatureIndex = creature.evolutions.findIndex(being => being === creature.creature) + 1;\n    if (!creature.evolutions[nextCreatureIndex]) return toggleEvolve();\n\n    if (creature.evolutions[nextCreatureIndex] === 'none') {\n      let newEvoLine = creature.evolutions;\n      newEvoLine.splice(nextCreatureIndex, 1);\n      console.log('newEvoLine', newEvoLine);\n      return toggleEvolve();\n    }\n\n    setTimeout(() => {\n      evolveSound.play();\n      const nextCreature = creature.evolutions[nextCreatureIndex];\n      userDispatch({\n        type: 'EVOLVE',\n        creature: {\n          id: creature.id,\n          nextCreature\n        }\n      });\n      return toggleEvolve();\n    }, 800);\n  }, [evolve]); // Sends creature id to context and allows for\n  // The selected creature's objectives to be shown\n\n  const displayCreatureActions = () => {\n    sendCreatureId(creature.id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"creature\",\n    style: {\n      backgroundImage: `linear-gradient(rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.6)), url(${img})`,\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CreatureDisplay, {\n    creature: creature,\n    displayObjectives: displayObjectives,\n    displayCreatureActions: displayCreatureActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Creature;","map":{"version":3,"sources":["/home/brandonzpb/Documents/projects/custom/creatures-of-habit/creatures-frontend/src/components/creature/Creature.js"],"names":["React","useState","useEffect","useContext","CreatureContext","UserContext","stats","CreatureDisplay","age","lvlUpMusicSrc","require","levelUpSound","Audio","evolveMusicSrc","evolveSound","Creature","creature","displayObjectives","sendCreatureId","expUpdate","toggleExpUpdate","user","userDispatch","levelUpdate","setLevelUpdate","evolve","setEvolve","pokeball","pokeballNumber","img","toggleLevelUpdate","toggleEvolve","checkCreatureStreak","streakTimestamp","streak_timestamp","streakDay","streak_day","thisDay","Date","getDay","minDifference","getAge","updateCreatureStreak","newCount","streak_count","newTimestamp","now","newDay","type","id","resetCreatureStreak","birthTime","birth_time","newAge","streak","count","exp","exp_goal","is_noob","currentTime","play","newLevel","level","timer","setTimeout","difficulty","getCreatureDifficulty","purpose","multiplier","getExpMultiplier","prevGoal","newGoal","getExpGoal","newPokeball","pokeball_number","clearTimeout","nextCreatureIndex","evolutions","findIndex","being","newEvoLine","splice","console","log","nextCreature","displayCreatureActions","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { CreatureContext } from '../../contexts/CreatureContext';\nimport { UserContext } from '../../contexts/UserContext';\nimport * as stats from '../../modules/stats';\nimport CreatureDisplay from './CreatureDisplay';\nimport './creature.css';\nimport * as age from '../../modules/age';\n\nconst lvlUpMusicSrc = require('../../sounds/level-up.mp3');\nconst levelUpSound = new Audio(lvlUpMusicSrc);\n\nconst evolveMusicSrc = require('../../sounds/evolve.mp3');\nconst evolveSound = new Audio(evolveMusicSrc);\n\nconst Creature = ({ creature }) => {\n  const { displayObjectives, sendCreatureId, expUpdate, toggleExpUpdate } = useContext(CreatureContext);\n  const { user, userDispatch } = useContext(UserContext);\n\n  const [levelUpdate, setLevelUpdate] = useState(false);\n  const [evolve, setEvolve] = useState(false);\n\n  const pokeball = (!creature.pokeballNumber) ? 13\n    : (creature.pokeballNumber < 14) ? 13 // pokeball\n    : (creature.pokeballNumber === 14) ? 1 // greatball\n    : (creature.pokeballNumber === 15) ? 0 : 11; // ultraball : masterball\n\n  const img = require(`../../images/pokeballs/${pokeball}.png`);\n\n  const toggleLevelUpdate = () => {\n    setLevelUpdate(!levelUpdate);\n  }\n\n  const toggleEvolve = () => {\n    setEvolve(!evolve);\n  }\n\n  /// STREAK METHODS ///\n\n  const checkCreatureStreak = () => {\n    // checks if streak is broken ('broken', 'constant', or 'increment')\n\n    const streakTimestamp = creature.streak_timestamp;\n    const streakDay = creature.streak_day;\n    const thisDay = (new Date()).getDay();\n\n    if (streakDay === 6) { // Streak continues if current week day is 0 and less than 24 hours passed\n\n      if (thisDay !== 0 && thisDay !== 6) { // Streak broken\n        return 'broken';\n      } else if (thisDay === 0) { // Next week day\n        // if more than 2 days passed; streak is over\n        // else, increment streak count\n\n        const minDifference = age.getAge(streakTimestamp, false);\n        return minDifference > 2880 ? 'broken' : 'increment';\n      } else { // Same day\n\n        return 'constant';\n      }\n\n    } else { // Streak continues if current week day is streak.timestamp + 1, and if less than 24 hours passed\n      \n      if (thisDay === streakDay + 1) {\n        // if more than 2 days passed; streak is over\n        // else, increment streak count\n\n        const minDifference = age.getAge(streakTimestamp, false);\n        return minDifference > 2880 ? 'broken' : 'increment';\n      } else if (streakDay === thisDay) { // Same day\n\n        return 'constant';\n      } else {\n        return 'broken';\n      }\n    }\n  }\n\n  const updateCreatureStreak = () => {\n    const newCount = creature.streak_count + 1;\n    const newTimestamp = Date.now();\n    const newDay = (new Date()).getDay();\n\n    userDispatch({ type: 'UPDATE_STREAK', creature: {\n      id: creature.id,\n      newCount,\n      newTimestamp,\n      newDay,\n    }});\n\n    return creature;\n  }\n\n  const resetCreatureStreak = () => {\n    const newCount = 0;\n    const newTimestamp = Date.now();\n    const newDay = (new Date()).getDay();\n\n    userDispatch({ type: 'UPDATE_STREAK', creature: {\n      id: creature.id,\n      newCount,\n      newTimestamp,\n      newDay,\n    }});\n    \n    return creature;\n  }\n\n  /// AUTO-UPDATE HOOKS ///\n\n  // Updates age, streak, exp, and level\n  useEffect(() => { \n    const birthTime = creature.birth_time;\n    const newAge = age.getAge(birthTime);\n\n    userDispatch({ type: 'UPDATE_AGE', creature: { newAge, id: creature.id } });\n\n    const streak = checkCreatureStreak();\n    if (streak === 'broken') resetCreatureStreak();\n\n    if (!expUpdate) return;\n    \n    if (streak === 'increment' || creature.streak.count === 0) updateCreatureStreak();\n\n    if (creature.exp >= creature.exp_goal || creature.is_noob) {\n      levelUpSound.currentTime = 1;\n        levelUpSound.play();\n        \n      const newLevel = creature.level + 1;\n\n      userDispatch({ type: 'LEVEL_UP', creature: { id: creature.id, level: newLevel }});\n\n      return toggleLevelUpdate();\n    }\n\n    toggleExpUpdate();\n  }, [creature.exp]);\n\n  // Updates creature multipliers\n  useEffect(() => {\n    if (!levelUpdate) return;\n\n    const timer = setTimeout(() => {\n      const difficulty = stats.getCreatureDifficulty(creature.purpose, creature.level);\n      const multiplier = stats.getExpMultiplier(creature.level);\n\n      userDispatch({ type: 'UPGRADE_MULTIPLIERS', creature: { id: creature.id, difficulty, multiplier }});\n\n      const prevGoal = (creature.is_noob) ? 1 : creature.exp_goal;\n      const newGoal = (creature.is_noob) ? 9 : stats.getExpGoal(creature.level, difficulty);\n\n      userDispatch({ type: 'LEVEL_UPDATES', creature: {\n        id: creature.id,\n        prevGoal,\n        newGoal,\n      }});\n\n      toggleExpUpdate();\n      toggleLevelUpdate();\n\n      if (creature.level === 15 || creature.level === 30 || creature.level === 50 || creature.level == 80) {\n        const newPokeball = (creature.level === 30) ? 14\n          : (creature.level === 50) ? 15 \n          : (creature.level === 80) ? 16 \n          : creature.pokeball_number;\n\n        userDispatch({ type: 'UPDATE_POKEBALL', creature: {\n          id: creature.id,\n          newPokeball\n        }});\n\n        return toggleEvolve();\n      }\n    }, 100);\n\n    return () => clearTimeout(timer);\n  }, [levelUpdate]);\n\n  // Evolves creature\n  useEffect(() => {\n    if (!evolve) return;\n    \n    const nextCreatureIndex = creature.evolutions.findIndex(being => being === creature.creature) + 1;\n    if (!creature.evolutions[nextCreatureIndex]) return toggleEvolve();\n\n    if (creature.evolutions[nextCreatureIndex] === 'none') {\n      let newEvoLine = creature.evolutions;\n        newEvoLine.splice(nextCreatureIndex, 1);\n      console.log('newEvoLine', newEvoLine);\n\n      return toggleEvolve();\n    }\n\n    setTimeout(() => {\n      evolveSound.play();\n\n      const nextCreature = creature.evolutions[nextCreatureIndex];\n\n      userDispatch({\n        type: 'EVOLVE',\n        creature: {\n          id: creature.id,\n          nextCreature\n        }\n      });\n\n      return toggleEvolve();\n    }, 800);\n  }, [evolve]);\n\n  // Sends creature id to context and allows for\n  // The selected creature's objectives to be shown\n  const displayCreatureActions = () => {\n    sendCreatureId(creature.id);\n  }\n\n  return (\n    <div className=\"creature\" style={{\n      backgroundImage: `linear-gradient(rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.6)), url(${img})`,\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n    }}>\n      <CreatureDisplay \n        creature={creature}\n        displayObjectives={displayObjectives}\n        displayCreatureActions={displayCreatureActions}\n      />\n    </div>\n  )\n}\n\nexport default Creature;\n"]},"metadata":{},"sourceType":"module"}